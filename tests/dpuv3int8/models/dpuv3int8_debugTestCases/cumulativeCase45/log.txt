[INFO] parse raw model     :  0%|          | 0/271 [00:00<?, ?it/s]                          [INFO] parse raw model     :100%|██████████| 271/271 [00:00<00:00, 32906.50it/s]             
[INFO] infer shape (NHWC)  :  0%|          | 0/220 [00:00<?, ?it/s]                          [INFO] infer shape (NHWC)  :100%|██████████| 220/220 [00:00<00:00, 4809.51it/s]              
[INFO] generate xmodel     :  0%|          | 0/220 [00:00<?, ?it/s]                          [INFO] generate xmodel     : 26%|██▌       | 57/220 [00:00<00:00, 549.27it/s]                [INFO] generate xmodel     : 37%|███▋      | 82/220 [00:00<00:00, 390.71it/s]                [INFO] generate xmodel     : 47%|████▋     | 103/220 [00:00<00:00, 249.58it/s]               [INFO] generate xmodel     : 55%|█████▌    | 121/220 [00:00<00:00, 123.80it/s]               [INFO] generate xmodel     : 61%|██████▏   | 135/220 [00:00<00:00, 105.09it/s]               [INFO] generate xmodel     : 67%|██████▋   | 147/220 [00:01<00:00, 89.57it/s]                [INFO] generate xmodel     : 72%|███████▏  | 158/220 [00:01<00:00, 78.60it/s]                [INFO] generate xmodel     : 76%|███████▋  | 168/220 [00:01<00:00, 75.56it/s]                [INFO] generate xmodel     : 80%|████████  | 177/220 [00:01<00:01, 39.95it/s]                [INFO] generate xmodel     : 84%|████████▎ | 184/220 [00:02<00:01, 24.16it/s]                [INFO] generate xmodel     : 86%|████████▌ | 189/220 [00:02<00:01, 25.55it/s]                [INFO] generate xmodel     : 88%|████████▊ | 194/220 [00:03<00:01, 16.34it/s]                [INFO] generate xmodel     : 90%|█████████ | 198/220 [00:03<00:01, 18.02it/s]                [INFO] generate xmodel     : 92%|█████████▏| 202/220 [00:03<00:01, 14.73it/s]                [INFO] generate xmodel     : 93%|█████████▎| 205/220 [00:03<00:00, 15.52it/s]                [INFO] generate xmodel     : 96%|█████████▋| 212/220 [00:04<00:00, 16.84it/s]                [INFO] generate xmodel     :100%|██████████| 220/220 [00:04<00:00, 52.50it/s]                ['/proj/xsjhdstaff3/paolod/perforce/RDI_paolod_Dev_work/src/DeepLearning/xilinx/gitlab/vai-toolchain/SC/HwAbstraction', '/wrk/hdstaff/paolod/perforce/RDI_paolod_Dev_work/src/DeepLearning/xilinx/gitlab/vai-toolchain', '/wrk/hdstaff/paolod/perforce/RDI_paolod_Dev_work/temp/anaconda2/envs/XIR2/lib/python37.zip', '/wrk/hdstaff/paolod/perforce/RDI_paolod_Dev_work/temp/anaconda2/envs/XIR2/lib/python3.7', '/wrk/hdstaff/paolod/perforce/RDI_paolod_Dev_work/temp/anaconda2/envs/XIR2/lib/python3.7/lib-dynload', '/wrk/hdstaff/paolod/perforce/RDI_paolod_Dev_work/temp/anaconda2/envs/XIR2/lib/python3.7/site-packages']
[INFO] ignore pretty_errors package
no wait
proto examples/tf_resnetv1_50_imagenet_224_224_6.97G/quantized/quantize_eval_model.pb
caffe None
[INFO] tensorflow model: examples/tf_resnetv1_50_imagenet_224_224_6.97G/quantized/quantize_eval_model.pb
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0030>> [4, 7, 7, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8030>> [4, 1, 1, 1000]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0070>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8070>> [4, 1000]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c00b0>> [1024, 1, 1, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac80b0>> [1000]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c00f0>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac80f0>> [4, 1000]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0130>> [1024, 1, 1, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8130>> [4, 7, 7, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0170>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8170>> [4, 1000]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c01b0>> [512, 1, 1, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac81b0>> [4, 1000]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c01f0>> [4, 7, 7, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac81f0>> [4, 1, 1, 1000]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0230>> [512, 1, 1, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8230>> [4, 7, 7, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0270>> [128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8270>> [4, 1000]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c02b0>> [1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac82b0>> [1000]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac82f0>> [2048, 1, 1, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0330>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8330>> [4, 7, 7, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0370>> [256, 1, 1, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8370>> [4, 7, 7, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c03b0>> [128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac83b0>> [4, 7, 7, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c03f0>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac83f0>> [4, 7, 7, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0430>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8430>> [4, 7, 7, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0470>> [256, 1, 1, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8470>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c04b0>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac84b0>> [512, 1, 1, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c04f0>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac84f0>> [2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0530>> [4, 28, 28, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8530>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0570>> [256, 3, 3, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8570>> [4, 7, 7, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c05b0>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac85b0>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c05f0>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac85f0>> [4, 7, 7, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0630>> [128, 1, 1, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8630>> [2048, 1, 1, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0670>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8670>> [512, 1, 1, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c06b0>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac86b0>> [2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c06f0>> [256, 3, 3, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac86f0>> [2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0730>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8730>> [4, 7, 7, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0770>> [1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8770>> [4, 7, 7, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c07b0>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac87b0>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c07f0>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac87f0>> [4, 7, 7, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0830>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8830>> [512, 3, 3, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0870>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8870>> [2048, 1, 1, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c08b0>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac88b0>> [4, 7, 7, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c08f0>> [512, 1, 1, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac88f0>> [4, 7, 7, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0930>> [512, 1, 1, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8930>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0970>> [1024, 1, 1, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8970>> [4, 7, 7, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c09b0>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac89b0>> [4, 7, 7, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c09f0>> [256, 1, 1, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac89f0>> [512, 1, 1, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0a30>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8a30>> [4, 7, 7, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0a70>> [256, 1, 1, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8a70>> [4, 7, 7, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0ab0>> [1024, 1, 1, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8ab0>> [4, 7, 7, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0af0>> [1024, 1, 1, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8af0>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0b30>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8b30>> [512, 3, 3, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0b70>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8b70>> [512, 1, 1, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0bb0>> [1024, 1, 1, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8bb0>> [512, 3, 3, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0bf0>> [4, 14, 14, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8bf0>> [2048, 1, 1, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0c30>> [1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8c30>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0c70>> [512, 3, 3, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8c70>> [4, 7, 7, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0cb0>> [1024, 1, 1, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8cb0>> [4, 7, 7, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0cf0>> [1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8cf0>> [4, 7, 7, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0d30>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8d30>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8d70>> [2048, 1, 1, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0db0>> [2048, 1, 1, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8db0>> [2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8df0>> [4, 7, 7, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8e30>> [4, 7, 7, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0e70>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8e70>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0eb0>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8eb0>> [64, 3, 3, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0ef0>> [1024, 1, 1, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8ef0>> [2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8f30>> [4, 7, 7, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c0f70>> [4, 58, 58, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8f70>> [64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac8fb0>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9030>> [4, 224, 224, 3]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9030>> [128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9070>> [4, 112, 112, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9070>> [4, 28, 28, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c90b0>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac90b0>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c90f0>> [128, 3, 3, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac90f0>> [64, 3, 3, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9130>> [4, 112, 112, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9130>> [128, 3, 3, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9170>> [4, 112, 112, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9170>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c91b0>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac91b0>> [256, 1, 1, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c91f0>> [4, 28, 28, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac91f0>> [256, 1, 1, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9230>> [4, 56, 56, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9230>> [128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9270>> [4, 56, 56, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9270>> [4, 56, 56, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c92b0>> [128, 3, 3, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac92b0>> [128, 3, 3, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c92f0>> [128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac92f0>> [4, 28, 28, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9330>> [128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9330>> [4, 28, 28, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9370>> [64, 1, 1, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9370>> [4, 56, 56, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c93b0>> [64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac93b0>> [4, 14, 14, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c93f0>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac93f0>> [4, 28, 28, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9430>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9430>> [128, 3, 3, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9470>> [4, 56, 56, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9470>> [128, 3, 3, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c94b0>> [256, 1, 1, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac94b0>> [4, 56, 56, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c94f0>> [256, 1, 1, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac94f0>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9530>> [2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9530>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9570>> [256, 1, 1, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9570>> [4, 28, 28, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c95b0>> [256, 1, 1, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac95b0>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c95f0>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac95f0>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9630>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9630>> [256, 1, 1, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9670>> [4, 56, 56, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9670>> [4, 30, 30, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c96b0>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac96b0>> [512, 1, 1, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c96f0>> [4, 56, 56, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac96f0>> [4, 56, 56, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9730>> [4, 56, 56, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9730>> [256, 1, 1, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9770>> [4, 14, 14, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9770>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c97b0>> [512, 1, 1, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac97b0>> [512, 1, 1, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c97f0>> [512, 1, 1, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac97f0>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9830>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9830>> [4, 28, 28, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9870>> [2]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9870>> [4, 28, 28, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c98b0>> [4, 28, 28, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac98b0>> [128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c98f0>> [128, 1, 1, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac98f0>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9930>> [64, 7, 7, 3]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9930>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9970>> [4, 14, 14, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9970>> [4, 14, 14, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c99b0>> [4, 14, 14, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac99b0>> [128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c99f0>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac99f0>> [128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9a30>> [4, 14, 14, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9a30>> [4, 14, 14, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9a70>> [128, 1, 1, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9a70>> [128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9ab0>> [128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9ab0>> [4, 28, 28, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9af0>> [4, 30, 30, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9af0>> [4, 28, 28, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9b30>> [128, 3, 3, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9b30>> [128, 1, 1, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9b70>> [128, 3, 3, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9b70>> [128, 1, 1, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9bb0>> [4, 56, 56, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9bb0>> [4, 56, 56, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9bf0>> [4, 56, 56, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9bf0>> [4, 56, 56, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9c30>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9c30>> [4, 14, 14, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9c70>> [512, 1, 1, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9c70>> [512, 1, 1, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9cb0>> [64, 1, 1, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9cb0>> [64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9cf0>> [4, 14, 14, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9cf0>> [4, 28, 28, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9d30>> [4, 28, 28, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9d30>> [64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9d70>> [4, 56, 56, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9d70>> [4, 56, 56, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9db0>> [4, 56, 56, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9db0>> [64, 3, 3, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9df0>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9df0>> [128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9e30>> [4, 28, 28, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9e30>> [128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9e70>> [64, 1, 1, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9e70>> [4, 28, 28, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9eb0>> [64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9eb0>> [128, 1, 1, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9ef0>> [64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9ef0>> [4, 28, 28, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9f30>> [4, 56, 56, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9f30>> [64, 3, 3, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9f70>> [4, 56, 56, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9f70>> [4, 56, 56, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851f11f70>> [4, 58, 58, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac9fb0>> [4, 56, 56, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f38514c9fb0>> [4, 56, 56, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca070>> [256, 3, 3, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca0b0>> [4, 28, 28, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca0f0>> [4, 28, 28, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca130>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca170>> [256, 3, 3, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca1b0>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca1f0>> [4, 28, 28, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca230>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca270>> [256, 1, 1, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca2b0>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca330>> [256, 1, 1, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca370>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca3b0>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca3f0>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca430>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca4b0>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca4f0>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca530>> [4, 224, 224, 3]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca5b0>> [4, 230, 230, 3]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca630>> [4, 28, 28, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca6b0>> [64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca6f0>> [4, 56, 56, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca730>> [4, 28, 28, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca7b0>> [4, 56, 56, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca7f0>> [4, 28, 28, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca830>> [1024, 1, 1, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca870>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca8b0>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca8f0>> [1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca930>> [1024, 1, 1, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca970>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca9b0>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384caca9f0>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacaa30>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacaa70>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacaab0>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacaaf0>> [1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacab30>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacab70>> [512, 1, 1, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacabb0>> [512, 1, 1, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacabf0>> [256, 1, 1, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacac30>> [256, 1, 1, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacac70>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacacb0>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacacf0>> [4, 28, 28, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacad30>> [4, 28, 28, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacad70>> [128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacadb0>> [128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacadf0>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacae30>> [64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacae70>> [64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacaeb0>> [128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacaef0>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacaf30>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacaf70>> [64, 1, 1, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cacafb0>> [64, 1, 1, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5c2b0>> [2048, 1, 1, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5c430>> [512, 3, 3, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5c470>> [512, 3, 3, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5c4b0>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5c4f0>> [4, 56, 56, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5c5b0>> [2048, 1, 1, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5c5f0>> [64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5c630>> [64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5c670>> [4, 56, 56, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5c6f0>> [128, 1, 1, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5c730>> [128, 1, 1, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5c770>> [64, 3, 3, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5c7f0>> [4, 56, 56, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5c870>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5c8b0>> [64, 3, 3, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5c930>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5c970>> [64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5c9f0>> [4, 56, 56, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5ca30>> [64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5ca70>> [512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5cab0>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5caf0>> [1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5cb30>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5cbb0>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5cbf0>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5cc30>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5cc70>> [64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5ccb0>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5ccf0>> [4, 56, 56, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5cd30>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5cd70>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5cdb0>> [256, 3, 3, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5cdf0>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5ce30>> [256, 3, 3, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5ce70>> [4, 7, 7, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5ceb0>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5cef0>> [4, 7, 7, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5cf30>> [4, 7, 7, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5cf70>> [4, 7, 7, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f3851e5cfb0>> [2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6770>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac67f0>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6830>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6930>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6970>> [64, 1, 1, 64]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac69b0>> [1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac69f0>> [1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6a30>> [1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6a70>> [1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6ab0>> [1024, 1, 1, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6af0>> [1024, 1, 1, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6b30>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6b70>> [256, 3, 3, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6bb0>> [4, 28, 28, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6bf0>> [4, 28, 28, 512]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6c30>> [4, 7, 7, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6c70>> [4, 7, 7, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6cb0>> [256, 3, 3, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6cf0>> [4, 7, 7, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6d30>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6d70>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6db0>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6df0>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6e30>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6e70>> [4, 7, 7, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6eb0>> [1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6ef0>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6f30>> [1024, 1, 1, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6f70>> [1024, 1, 1, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac6fb0>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7030>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7070>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac70b0>> [1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac70f0>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7130>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7170>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac71b0>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac71f0>> [4, 28, 28, 128]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7230>> [256, 3, 3, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7270>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac72b0>> [256, 3, 3, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac72f0>> [64, 7, 7, 3]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7330>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7370>> [2]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac73b0>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac73f0>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7430>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7470>> [1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac74b0>> [4, 16, 16, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac74f0>> [1]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7530>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7570>> [4, 7, 7, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac75b0>> [4, 7, 7, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac75f0>> [4, 7, 7, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7630>> [4, 7, 7, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7670>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac76b0>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac76f0>> [4, 16, 16, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7730>> [4, 7, 7, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7770>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac77b0>> [256, 3, 3, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac77f0>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7830>> [256, 3, 3, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7870>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac78b0>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac78f0>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7930>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7970>> [256, 1, 1, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac79b0>> [256, 1, 1, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac79f0>> [256, 1, 1, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7a30>> [4, 230, 230, 3]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7a70>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7ab0>> [4, 14, 14, 256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7af0>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7b30>> [1000, 1, 1, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7b70>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7bb0>> [256]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7bf0>> [256, 1, 1, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7c30>> [4, 1, 1, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7c70>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7cb0>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7cf0>> [4, 1000]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7d30>> [4, 1000]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7d70>> [4, 7, 7, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7db0>> [4, 7, 7, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7df0>> [1000, 1, 1, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7e30>> [4, 1, 1, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7e70>> [4, 1, 1, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7eb0>> [4, 14, 14, 1024]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7ef0>> [4, 7, 7, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7f30>> [4, 7, 7, 2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7f70>> [2048]
<bound method PyCapsule.get_name of <xir.Op object at 0x7f384cac7fb0>> [4, 7, 7, 2048]
 ############################################# 
 ######  Hyper Graph Construction 
 ############################################# 
 ############################################# 
 ######  Hyper Graph Construction
 ############################################# 
XIR OP name resnet_v1_50/conv1/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/predictions/Reshape_1/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/add add
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/add add
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm/add/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm/add/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm/add/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm/add/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/Pad pad
XIR ATT dict_keys(['constant_values', 'mode', 'paddings', 'quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/Pad/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/conv1/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool maxpool2d
XIR ATT dict_keys(['global', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/predictions/Shape_const_const const
XIR ATT dict_keys(['data', 'data_type', 'quant_in_signed', 'quant_out_signed', 'shape'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/add add
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/add add
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm/add/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/add add
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/pool1/MaxPool/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/pool1/MaxPool maxpool2d
XIR ATT dict_keys(['global', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm/add/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm/add/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/conv1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/conv1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/conv1/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name input data
XIR ATT dict_keys(['data_type', 'quant_in_signed', 'quant_out_signed', 'shape'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/add add
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_2/bottleneck_v1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm/add/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm/add/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/add add
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm/add/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/pool5/scale_value_const const
XIR ATT dict_keys(['data', 'data_type', 'quant_in_signed', 'quant_out_signed', 'shape'])
XIR OP name resnet_v1_50/predictions/Reshape/shape_const const
XIR ATT dict_keys(['data', 'data_type', 'quant_in_signed', 'quant_out_signed', 'shape'])
XIR OP name resnet_v1_50/conv1/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/Pad/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/add add
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm/add/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_4/bottleneck_v1/add add
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/Pad/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/Pad pad
XIR ATT dict_keys(['constant_values', 'mode', 'paddings', 'quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm/add/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/add add
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/logits/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/SpatialSqueeze/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/predictions/Reshape reshape
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed', 'shape'])
XIR OP name resnet_v1_50/predictions/Reshape/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/predictions/Softmax softmax
XIR ATT dict_keys(['axis', 'quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/logits/BiasAdd/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/SpatialSqueeze squeeze
XIR ATT dict_keys(['axis', 'quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/logits/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/logits/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/add add
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm/add/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm/add/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/add add
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/pool5 avgpool2d
XIR ATT dict_keys(['count_include_invalid', 'count_include_pad', 'global', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/pool5/mul mul
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/pool5/mul/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/logits/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/logits/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/predictions/Reshape_1 reshape
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed', 'shape'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/add add
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm/add/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/BatchNorm/FusedBatchNorm/add/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/Pad pad
XIR ATT dict_keys(['constant_values', 'mode', 'paddings', 'quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/shortcut/MaxPool maxpool2d
XIR ATT dict_keys(['global', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/shortcut/MaxPool/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_6/bottleneck_v1/Pad pad
XIR ATT dict_keys(['constant_values', 'mode', 'paddings', 'quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm/add/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block3/unit_1/bottleneck_v1/add add
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm/add/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm/add/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/add add
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/BatchNorm/FusedBatchNorm/add/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block3/unit_3/bottleneck_v1/add add
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name input/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/Pad/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Relu relu
XIR ATT dict_keys(['quant_in_signed', 'quant_out_signed'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool maxpool2d
XIR ATT dict_keys(['global', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_weights_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_weights const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D conv2d
XIR ATT dict_keys(['dilation', 'kernel', 'pad', 'pad_mode', 'quant_in_signed', 'quant_out_signed', 'stride'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_bias_fixneuron fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
XIR OP name resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Relu/aquant fix
XIR ATT dict_keys(['bit_width', 'fix_point', 'if_signed', 'quant_in_bit_width', 'quant_in_quantize_pos', 'quant_in_round_mode', 'quant_in_signed', 'quant_out_bit_width', 'quant_out_quantize_pos', 'quant_out_round_mode', 'quant_out_signed', 'round_mode'])
XIR OP name resnet_v1_50/conv1/Conv2D_bias const
XIR ATT dict_keys(['data', 'data_type', 'shape'])
Floyd & Warshall
BFS
 ############################################# 
 ######  Parameters Assimilation
 ############################################# 
 ############################################# 
 ######  Assimilating Fix Neurons
 ############################################# 
 ############################################# 
 ######  Assimilating Relu
 ############################################# 
{'constant_values': [0.0, 0.0, 0.0, 0.0], 'mode': 'CONSTANT', 'paddings': [0, 0, 1, 1, 1, 1, 0, 0], 'quant_in_signed': 1, 'quant_out_signed': 1, 'kernel_width': 1, 'kernel_height': 1, 'kernel_1': TensorShapes(batch=0, width=1, height=1, channel=0), 'stride_width': 1, 'stride_height': 1, 'strides_1': TensorShapes(batch=0, width=1, height=1, channel=0)}
Pad assimilation resnet_v1_50/block2/unit_4/bottleneck_v1/Pad [0, 0, 1, 1, 1, 1, 0, 0] resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D [0, 0, 1, 1, 1, 1, 0, 0]
Name resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D Parameter False	Space 3211264 bits, BitePerPixel 8 Fraction 6 Start 0 End 401408	Specifier  Layout -1 Time -1 Strategies None None	Shape  [4, 28, 28, 128] CNN_Shape TensorShapes(batch=4, width=28, height=28, channel=128)
Name resnet_v1_50/block2/unit_4/bottleneck_v1/Pad Parameter False	Space 3686400 bits, BitePerPixel 8 Fraction 6 Start 0 End 460800	Specifier  Layout -1 Time -1 Strategies None None	Shape  [4, 30, 30, 128] CNN_Shape TensorShapes(batch=4, width=30, height=30, channel=128)
Name resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D Parameter False	Space 802816 bits, BitePerPixel 8 Fraction 6 Start 0 End 100352	Specifier  Layout -1 Time -1 Strategies None None	Shape  [4, 14, 14, 128] CNN_Shape TensorShapes(batch=4, width=14, height=14, channel=128)
{'constant_values': [0.0, 0.0, 0.0, 0.0], 'mode': 'CONSTANT', 'paddings': [0, 0, 1, 1, 1, 1, 0, 0], 'quant_in_signed': 1, 'quant_out_signed': 1, 'kernel_width': 1, 'kernel_height': 1, 'kernel_1': TensorShapes(batch=0, width=1, height=1, channel=0), 'stride_width': 1, 'stride_height': 1, 'strides_1': TensorShapes(batch=0, width=1, height=1, channel=0)}
Pad assimilation resnet_v1_50/block1/unit_3/bottleneck_v1/Pad [0, 0, 1, 1, 1, 1, 0, 0] resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D [0, 0, 1, 1, 1, 1, 0, 0]
Name resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D Parameter False	Space 6422528 bits, BitePerPixel 8 Fraction 6 Start 0 End 802816	Specifier  Layout -1 Time -1 Strategies None None	Shape  [4, 56, 56, 64] CNN_Shape TensorShapes(batch=4, width=56, height=56, channel=64)
Name resnet_v1_50/block1/unit_3/bottleneck_v1/Pad Parameter False	Space 6889472 bits, BitePerPixel 8 Fraction 6 Start 0 End 861184	Specifier  Layout -1 Time -1 Strategies None None	Shape  [4, 58, 58, 64] CNN_Shape TensorShapes(batch=4, width=58, height=58, channel=64)
Name resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D Parameter False	Space 1605632 bits, BitePerPixel 8 Fraction 6 Start 0 End 200704	Specifier  Layout -1 Time -1 Strategies None None	Shape  [4, 28, 28, 64] CNN_Shape TensorShapes(batch=4, width=28, height=28, channel=64)
{'constant_values': [0.0, 0.0, 0.0, 0.0], 'mode': 'CONSTANT', 'paddings': [0, 0, 3, 3, 3, 3, 0, 0], 'quant_in_signed': 1, 'quant_out_signed': 1, 'kernel_width': 1, 'kernel_height': 1, 'kernel_1': TensorShapes(batch=0, width=1, height=1, channel=0), 'stride_width': 1, 'stride_height': 1, 'strides_1': TensorShapes(batch=0, width=1, height=1, channel=0)}
Pad assimilation resnet_v1_50/Pad [0, 0, 3, 3, 3, 3, 0, 0] resnet_v1_50/conv1/Conv2D [0, 0, 3, 3, 3, 3, 0, 0]
Name input Parameter False	Space 4816896 bits, BitePerPixel 8 Fraction 6 Start 0 End 602112	Specifier  Layout -1 Time -1 Strategies None None	Shape  [4, 224, 224, 3] CNN_Shape TensorShapes(batch=4, width=224, height=224, channel=3)
Name resnet_v1_50/Pad Parameter False	Space 5078400 bits, BitePerPixel 8 Fraction 6 Start 0 End 634800	Specifier  Layout -1 Time -1 Strategies None None	Shape  [4, 230, 230, 3] CNN_Shape TensorShapes(batch=4, width=230, height=230, channel=3)
Name resnet_v1_50/conv1/Conv2D Parameter False	Space 25690112 bits, BitePerPixel 8 Fraction 6 Start 0 End 3211264	Specifier  Layout -1 Time -1 Strategies None None	Shape  [4, 112, 112, 64] CNN_Shape TensorShapes(batch=4, width=112, height=112, channel=64)
{'constant_values': [0.0, 0.0, 0.0, 0.0], 'mode': 'CONSTANT', 'paddings': [0, 0, 1, 1, 1, 1, 0, 0], 'quant_in_signed': 1, 'quant_out_signed': 1, 'kernel_width': 1, 'kernel_height': 1, 'kernel_1': TensorShapes(batch=0, width=1, height=1, channel=0), 'stride_width': 1, 'stride_height': 1, 'strides_1': TensorShapes(batch=0, width=1, height=1, channel=0)}
Pad assimilation resnet_v1_50/block3/unit_6/bottleneck_v1/Pad [0, 0, 1, 1, 1, 1, 0, 0] resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D [0, 0, 1, 1, 1, 1, 0, 0]
Name resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D Parameter False	Space 1605632 bits, BitePerPixel 8 Fraction 6 Start 0 End 200704	Specifier  Layout -1 Time -1 Strategies None None	Shape  [4, 14, 14, 256] CNN_Shape TensorShapes(batch=4, width=14, height=14, channel=256)
Name resnet_v1_50/block3/unit_6/bottleneck_v1/Pad Parameter False	Space 2097152 bits, BitePerPixel 8 Fraction 6 Start 0 End 262144	Specifier  Layout -1 Time -1 Strategies None None	Shape  [4, 16, 16, 256] CNN_Shape TensorShapes(batch=4, width=16, height=16, channel=256)
Name resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D Parameter False	Space 401408 bits, BitePerPixel 8 Fraction 6 Start 0 End 50176	Specifier  Layout -1 Time -1 Strategies None None	Shape  [4, 7, 7, 256] CNN_Shape TensorShapes(batch=4, width=7, height=7, channel=256)
  0 const      _50/predictions/Reshape/shape_const Ops 0.000000e+00 IN [] OUT ['resnet_v1_50/predictions/Reshape']
  1 const      v1_50/predictions/Shape_const_const Ops 0.000000e+00 IN [] OUT ['resnet_v1_50/predictions/Reshape_1']
  2 data       input                               Ops 0.000000e+00 IN [] OUT ['resnet_v1_50/conv1/Conv2D']
  3 conv2d     resnet_v1_50/conv1/Conv2D           Ops 0.000000e+00 IN ['input'] OUT ['resnet_v1_50/pool1/MaxPool']
  4 maxpool2d  resnet_v1_50/pool1/MaxPool          Ops 0.000000e+00 IN ['resnet_v1_50/conv1/Conv2D'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D']
  5 conv2d     nit_1/bottleneck_v1/shortcut/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/pool1/MaxPool'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/add']
  6 conv2d     1/unit_1/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/pool1/MaxPool'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D']
  7 conv2d     1/unit_1/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D']
  8 conv2d     1/unit_1/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/add']
  9 add        _50/block1/unit_1/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D', 'resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block1/unit_2/bottleneck_v1/add']
 10 conv2d     1/unit_2/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D']
 11 conv2d     1/unit_2/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D']
 12 conv2d     1/unit_2/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block1/unit_2/bottleneck_v1/add']
 13 add        _50/block1/unit_2/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block1/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool']
 14 maxpool2d  it_3/bottleneck_v1/shortcut/MaxPool Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/add']
 15 conv2d     1/unit_3/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D']
 16 conv2d     1/unit_3/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D']
 17 conv2d     1/unit_3/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/add']
 18 add        _50/block1/unit_3/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool', 'resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D']
 19 conv2d     nit_1/bottleneck_v1/shortcut/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/add']
 20 conv2d     2/unit_1/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D']
 21 conv2d     2/unit_1/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D']
 22 conv2d     2/unit_1/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/add']
 23 add        _50/block2/unit_1/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D', 'resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block2/unit_2/bottleneck_v1/add']
 24 conv2d     2/unit_2/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D']
 25 conv2d     2/unit_2/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D']
 26 conv2d     2/unit_2/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block2/unit_2/bottleneck_v1/add']
 27 add        _50/block2/unit_2/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block2/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block2/unit_3/bottleneck_v1/add']
 28 conv2d     2/unit_3/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D']
 29 conv2d     2/unit_3/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D']
 30 conv2d     2/unit_3/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block2/unit_3/bottleneck_v1/add']
 31 add        _50/block2/unit_3/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block2/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool']
 32 maxpool2d  it_4/bottleneck_v1/shortcut/MaxPool Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/add']
 33 conv2d     2/unit_4/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D']
 34 conv2d     2/unit_4/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D']
 35 conv2d     2/unit_4/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/add']
 36 add        _50/block2/unit_4/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool', 'resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D']
 37 conv2d     nit_1/bottleneck_v1/shortcut/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/add']
 38 conv2d     3/unit_1/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D']
 39 conv2d     3/unit_1/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D']
 40 conv2d     3/unit_1/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/add']
 41 add        _50/block3/unit_1/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D', 'resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block3/unit_2/bottleneck_v1/add']
 42 conv2d     3/unit_2/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D']
 43 conv2d     3/unit_2/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D']
 44 conv2d     3/unit_2/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block3/unit_2/bottleneck_v1/add']
 45 add        _50/block3/unit_2/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block3/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block3/unit_3/bottleneck_v1/add']
 46 conv2d     3/unit_3/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D']
 47 conv2d     3/unit_3/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D']
 48 conv2d     3/unit_3/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block3/unit_3/bottleneck_v1/add']
 49 add        _50/block3/unit_3/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block3/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block3/unit_4/bottleneck_v1/add']
 50 conv2d     3/unit_4/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D']
 51 conv2d     3/unit_4/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D']
 52 conv2d     3/unit_4/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block3/unit_4/bottleneck_v1/add']
 53 add        _50/block3/unit_4/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block3/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block3/unit_5/bottleneck_v1/add']
 54 conv2d     3/unit_5/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_4/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D']
 55 conv2d     3/unit_5/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D']
 56 conv2d     3/unit_5/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block3/unit_5/bottleneck_v1/add']
 57 add        _50/block3/unit_5/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block3/unit_4/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block3/unit_6/bottleneck_v1/shortcut/MaxPool']
 58 maxpool2d  it_6/bottleneck_v1/shortcut/MaxPool Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_5/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_6/bottleneck_v1/add']
 59 conv2d     3/unit_6/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_5/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D']
 60 conv2d     3/unit_6/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D']
 61 conv2d     3/unit_6/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block3/unit_6/bottleneck_v1/add']
 62 add        _50/block3/unit_6/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_6/bottleneck_v1/shortcut/MaxPool', 'resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D']
 63 conv2d     nit_1/bottleneck_v1/shortcut/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_6/bottleneck_v1/add'] OUT ['resnet_v1_50/block4/unit_1/bottleneck_v1/add']
 64 conv2d     4/unit_1/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_6/bottleneck_v1/add'] OUT ['resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D']
 65 conv2d     4/unit_1/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D']
 66 conv2d     4/unit_1/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block4/unit_1/bottleneck_v1/add']
 67 add        _50/block4/unit_1/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D', 'resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block4/unit_2/bottleneck_v1/add']
 68 conv2d     4/unit_2/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block4/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D']
 69 conv2d     4/unit_2/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D']
 70 conv2d     4/unit_2/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block4/unit_2/bottleneck_v1/add']
 71 add        _50/block4/unit_2/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block4/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block4/unit_3/bottleneck_v1/add']
 72 conv2d     4/unit_3/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block4/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D']
 73 conv2d     4/unit_3/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D']
 74 conv2d     4/unit_3/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block4/unit_3/bottleneck_v1/add']
 75 add        _50/block4/unit_3/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block4/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/pool5']
 76 avgpool2d  resnet_v1_50/pool5                  Ops 0.000000e+00 IN ['resnet_v1_50/block4/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/pool5/mul']
 77 mul        resnet_v1_50/pool5/mul              Ops 0.000000e+00 IN ['resnet_v1_50/pool5'] OUT ['resnet_v1_50/logits/Conv2D']
 78 conv2d     resnet_v1_50/logits/Conv2D          Ops 0.000000e+00 IN ['resnet_v1_50/pool5/mul'] OUT ['resnet_v1_50/SpatialSqueeze']
 79 squeeze    resnet_v1_50/SpatialSqueeze         Ops 0.000000e+00 IN ['resnet_v1_50/logits/Conv2D'] OUT ['resnet_v1_50/predictions/Reshape']
 80 reshape    resnet_v1_50/predictions/Reshape    Ops 0.000000e+00 IN ['resnet_v1_50/SpatialSqueeze'] OUT ['resnet_v1_50/predictions/Softmax']
 81 softmax    resnet_v1_50/predictions/Softmax    Ops 0.000000e+00 IN ['resnet_v1_50/predictions/Reshape'] OUT ['resnet_v1_50/predictions/Reshape_1']
 82 reshape    resnet_v1_50/predictions/Reshape_1  Ops 0.000000e+00 IN ['resnet_v1_50/predictions/Softmax'] OUT []
Outputs dict_keys(['resnet_v1_50/predictions/Reshape_1'])
 delete arch  resnet_v1_50/block3/unit_3/bottleneck_v1/conv3/Conv2D-resnet_v1_50/block3/unit_3/bottleneck_v1/add True
 delete arch  resnet_v1_50/block3/unit_2/bottleneck_v1/add-resnet_v1_50/block3/unit_3/bottleneck_v1/add True
 delete arch  resnet_v1_50/block3/unit_3/bottleneck_v1/add-resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D True
 delete arch  resnet_v1_50/block3/unit_4/bottleneck_v1/conv1/Conv2D-resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D True
 delete arch  resnet_v1_50/block3/unit_4/bottleneck_v1/conv2/Conv2D-resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D True
 delete arch  resnet_v1_50/block3/unit_4/bottleneck_v1/conv3/Conv2D-resnet_v1_50/block3/unit_4/bottleneck_v1/add True
 delete arch  resnet_v1_50/block3/unit_3/bottleneck_v1/add-resnet_v1_50/block3/unit_4/bottleneck_v1/add True
 delete arch  resnet_v1_50/block3/unit_4/bottleneck_v1/add-resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D True
 delete arch  resnet_v1_50/block3/unit_5/bottleneck_v1/conv1/Conv2D-resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D True
 delete arch  resnet_v1_50/block3/unit_5/bottleneck_v1/conv2/Conv2D-resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D True
 delete arch  resnet_v1_50/block3/unit_5/bottleneck_v1/conv3/Conv2D-resnet_v1_50/block3/unit_5/bottleneck_v1/add True
 delete arch  resnet_v1_50/block3/unit_4/bottleneck_v1/add-resnet_v1_50/block3/unit_5/bottleneck_v1/add True
 delete arch  resnet_v1_50/block3/unit_5/bottleneck_v1/add-resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D True
 delete arch  resnet_v1_50/block3/unit_6/bottleneck_v1/conv1/Conv2D-resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D True
 delete arch  resnet_v1_50/block3/unit_6/bottleneck_v1/conv2/Conv2D-resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D True
 delete arch  resnet_v1_50/block3/unit_6/bottleneck_v1/shortcut/MaxPool-resnet_v1_50/block3/unit_6/bottleneck_v1/add True
 delete arch  resnet_v1_50/block3/unit_6/bottleneck_v1/conv3/Conv2D-resnet_v1_50/block3/unit_6/bottleneck_v1/add True
 delete arch  resnet_v1_50/block3/unit_6/bottleneck_v1/add-resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D True
 delete arch  resnet_v1_50/block4/unit_1/bottleneck_v1/conv1/Conv2D-resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D True
 delete arch  resnet_v1_50/block4/unit_1/bottleneck_v1/conv2/Conv2D-resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D True
 delete arch  resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D-resnet_v1_50/block4/unit_1/bottleneck_v1/add True
 delete arch  resnet_v1_50/block4/unit_1/bottleneck_v1/conv3/Conv2D-resnet_v1_50/block4/unit_1/bottleneck_v1/add True
 delete arch  resnet_v1_50/block4/unit_1/bottleneck_v1/add-resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D True
 delete arch  resnet_v1_50/block4/unit_2/bottleneck_v1/conv1/Conv2D-resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D True
 delete arch  resnet_v1_50/block4/unit_2/bottleneck_v1/conv2/Conv2D-resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D True
 delete arch  resnet_v1_50/block4/unit_2/bottleneck_v1/conv3/Conv2D-resnet_v1_50/block4/unit_2/bottleneck_v1/add True
 delete arch  resnet_v1_50/block4/unit_1/bottleneck_v1/add-resnet_v1_50/block4/unit_2/bottleneck_v1/add True
 delete arch  resnet_v1_50/block4/unit_2/bottleneck_v1/add-resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D True
 delete arch  resnet_v1_50/block4/unit_3/bottleneck_v1/conv1/Conv2D-resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D True
 delete arch  resnet_v1_50/block4/unit_3/bottleneck_v1/conv2/Conv2D-resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D True
 delete arch  resnet_v1_50/block4/unit_3/bottleneck_v1/conv3/Conv2D-resnet_v1_50/block4/unit_3/bottleneck_v1/add True
 delete arch  resnet_v1_50/block4/unit_2/bottleneck_v1/add-resnet_v1_50/block4/unit_3/bottleneck_v1/add True
 delete arch  resnet_v1_50/block4/unit_3/bottleneck_v1/add-resnet_v1_50/pool5 True
 delete arch  resnet_v1_50/pool5-resnet_v1_50/pool5/mul True
 delete arch  resnet_v1_50/pool5/mul-resnet_v1_50/logits/Conv2D True
 delete arch  resnet_v1_50/logits/Conv2D-resnet_v1_50/SpatialSqueeze True
 delete arch  resnet_v1_50/SpatialSqueeze-resnet_v1_50/predictions/Reshape True
 delete arch  resnet_v1_50/predictions/Reshape-resnet_v1_50/predictions/Softmax True
 delete arch  resnet_v1_50/predictions/Softmax-resnet_v1_50/predictions/Reshape_1 True
 delete node  resnet_v1_50/predictions/Reshape_1
 delete node  resnet_v1_50/block4/unit_1/bottleneck_v1/shortcut/Conv2D
 delete node  resnet_v1_50/block3/unit_6/bottleneck_v1/shortcut/MaxPool
True resnet_v1_50/block1/unit_1/bottleneck_v1/add
True resnet_v1_50/block1/unit_2/bottleneck_v1/add
True resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D
True resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D
True resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool
True resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D
 delete node  resnet_v1_50/predictions/Shape_const_const
False resnet_v1_50/predictions/Shape_const_const
True resnet_v1_50/block2/unit_1/bottleneck_v1/add
True resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D
True resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D
True resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D
True resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D
True resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D
True resnet_v1_50/block1/unit_3/bottleneck_v1/add
True resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D
True resnet_v1_50/block2/unit_3/bottleneck_v1/add
True resnet_v1_50/pool1/MaxPool
True resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D
True resnet_v1_50/conv1/Conv2D
True input
True resnet_v1_50/block2/unit_2/bottleneck_v1/add
True resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D
True resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D
True resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D
True resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D
True resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D
 delete node  resnet_v1_50/predictions/Reshape/shape_const
False resnet_v1_50/predictions/Reshape/shape_const
True resnet_v1_50/block3/unit_2/bottleneck_v1/add
True resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D
True resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D
True resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D
True resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D
True resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D
True resnet_v1_50/block2/unit_4/bottleneck_v1/add
True resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D
True resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D
True resnet_v1_50/block3/unit_1/bottleneck_v1/add
True resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D
True resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D
True resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D
True resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D
True resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D
True resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D
True resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D
True resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D
True resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool
True resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D
True resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D
Outputs dict_keys(['resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D'])
  0 data       input                               Ops 0.000000e+00 IN [] OUT ['resnet_v1_50/conv1/Conv2D']
  1 conv2d     resnet_v1_50/conv1/Conv2D           Ops 0.000000e+00 IN ['input'] OUT ['resnet_v1_50/pool1/MaxPool']
  2 maxpool2d  resnet_v1_50/pool1/MaxPool          Ops 0.000000e+00 IN ['resnet_v1_50/conv1/Conv2D'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D']
  3 conv2d     nit_1/bottleneck_v1/shortcut/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/pool1/MaxPool'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/add']
  4 conv2d     1/unit_1/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/pool1/MaxPool'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D']
  5 conv2d     1/unit_1/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D']
  6 conv2d     1/unit_1/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/add']
  7 add        _50/block1/unit_1/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D', 'resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block1/unit_2/bottleneck_v1/add']
  8 conv2d     1/unit_2/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D']
  9 conv2d     1/unit_2/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D']
 10 conv2d     1/unit_2/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block1/unit_2/bottleneck_v1/add']
 11 add        _50/block1/unit_2/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block1/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool']
 12 maxpool2d  it_3/bottleneck_v1/shortcut/MaxPool Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/add']
 13 conv2d     1/unit_3/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D']
 14 conv2d     1/unit_3/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D']
 15 conv2d     1/unit_3/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/add']
 16 add        _50/block1/unit_3/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool', 'resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D']
 17 conv2d     nit_1/bottleneck_v1/shortcut/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/add']
 18 conv2d     2/unit_1/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D']
 19 conv2d     2/unit_1/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D']
 20 conv2d     2/unit_1/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/add']
 21 add        _50/block2/unit_1/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D', 'resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block2/unit_2/bottleneck_v1/add']
 22 conv2d     2/unit_2/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D']
 23 conv2d     2/unit_2/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D']
 24 conv2d     2/unit_2/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block2/unit_2/bottleneck_v1/add']
 25 add        _50/block2/unit_2/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block2/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block2/unit_3/bottleneck_v1/add']
 26 conv2d     2/unit_3/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D']
 27 conv2d     2/unit_3/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D']
 28 conv2d     2/unit_3/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block2/unit_3/bottleneck_v1/add']
 29 add        _50/block2/unit_3/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block2/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool']
 30 maxpool2d  it_4/bottleneck_v1/shortcut/MaxPool Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/add']
 31 conv2d     2/unit_4/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D']
 32 conv2d     2/unit_4/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D']
 33 conv2d     2/unit_4/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/add']
 34 add        _50/block2/unit_4/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool', 'resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D']
 35 conv2d     nit_1/bottleneck_v1/shortcut/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/add']
 36 conv2d     3/unit_1/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D']
 37 conv2d     3/unit_1/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D']
 38 conv2d     3/unit_1/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/add']
 39 add        _50/block3/unit_1/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D', 'resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block3/unit_2/bottleneck_v1/add']
 40 conv2d     3/unit_2/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D']
 41 conv2d     3/unit_2/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D']
 42 conv2d     3/unit_2/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block3/unit_2/bottleneck_v1/add']
 43 add        _50/block3/unit_2/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block3/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D']
 44 conv2d     3/unit_3/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D']
 45 conv2d     3/unit_3/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D'] OUT []
Floyd & Warshall
BFS
Floyd & Warshall
BFS
  0 data       input                               Ops 0.000000e+00 IN [] OUT ['resnet_v1_50/conv1/Conv2D']
  1 conv2d     resnet_v1_50/conv1/Conv2D           Ops 0.000000e+00 IN ['input'] OUT ['resnet_v1_50/pool1/MaxPool']
  2 maxpool2d  resnet_v1_50/pool1/MaxPool          Ops 0.000000e+00 IN ['resnet_v1_50/conv1/Conv2D'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D']
  3 conv2d     nit_1/bottleneck_v1/shortcut/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/pool1/MaxPool'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/add']
  4 conv2d     1/unit_1/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/pool1/MaxPool'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D']
  5 conv2d     1/unit_1/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D']
  6 conv2d     1/unit_1/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/add']
  7 add        _50/block1/unit_1/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D', 'resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block1/unit_2/bottleneck_v1/add']
  8 conv2d     1/unit_2/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D']
  9 conv2d     1/unit_2/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D']
 10 conv2d     1/unit_2/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block1/unit_2/bottleneck_v1/add']
 11 add        _50/block1/unit_2/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block1/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool']
 12 maxpool2d  it_3/bottleneck_v1/shortcut/MaxPool Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/add']
 13 conv2d     1/unit_3/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D']
 14 conv2d     1/unit_3/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D']
 15 conv2d     1/unit_3/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/add']
 16 add        _50/block1/unit_3/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool', 'resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D']
 17 conv2d     nit_1/bottleneck_v1/shortcut/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/add']
 18 conv2d     2/unit_1/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D']
 19 conv2d     2/unit_1/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D']
 20 conv2d     2/unit_1/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/add']
 21 add        _50/block2/unit_1/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D', 'resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block2/unit_2/bottleneck_v1/add']
 22 conv2d     2/unit_2/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D']
 23 conv2d     2/unit_2/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D']
 24 conv2d     2/unit_2/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block2/unit_2/bottleneck_v1/add']
 25 add        _50/block2/unit_2/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block2/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block2/unit_3/bottleneck_v1/add']
 26 conv2d     2/unit_3/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D']
 27 conv2d     2/unit_3/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D']
 28 conv2d     2/unit_3/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block2/unit_3/bottleneck_v1/add']
 29 add        _50/block2/unit_3/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block2/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool']
 30 maxpool2d  it_4/bottleneck_v1/shortcut/MaxPool Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/add']
 31 conv2d     2/unit_4/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D']
 32 conv2d     2/unit_4/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D']
 33 conv2d     2/unit_4/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/add']
 34 add        _50/block2/unit_4/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool', 'resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D']
 35 conv2d     nit_1/bottleneck_v1/shortcut/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/add']
 36 conv2d     3/unit_1/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D']
 37 conv2d     3/unit_1/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D']
 38 conv2d     3/unit_1/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/add']
 39 add        _50/block3/unit_1/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D', 'resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block3/unit_2/bottleneck_v1/add']
 40 conv2d     3/unit_2/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D']
 41 conv2d     3/unit_2/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D']
 42 conv2d     3/unit_2/bottleneck_v1/conv3/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block3/unit_2/bottleneck_v1/add']
 43 add        _50/block3/unit_2/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block3/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D']
 44 conv2d     3/unit_3/bottleneck_v1/conv1/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D']
 45 conv2d     3/unit_3/bottleneck_v1/conv2/Conv2D Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D'] OUT []
 ############################################# 
 ######  CPU nodes Must Go
 ############################################# 
Inputs ['input']
Outputs ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D']
FPGA True: add        resnet_v1_50/block1/unit_1/bottleneck_v1/add  
FPGA True: add        resnet_v1_50/block1/unit_2/bottleneck_v1/add  
FPGA True: conv2d     resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D  
FPGA True: conv2d     resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D  
FPGA True: maxpool2d  resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool  
FPGA True: conv2d     resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D  
FPGA True: add        resnet_v1_50/block2/unit_1/bottleneck_v1/add  
FPGA True: conv2d     resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D  
FPGA True: conv2d     resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D  
FPGA True: conv2d     resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D  
FPGA True: conv2d     resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D  
FPGA True: conv2d     resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D  
FPGA True: add        resnet_v1_50/block1/unit_3/bottleneck_v1/add  
FPGA True: conv2d     resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D  
FPGA True: add        resnet_v1_50/block2/unit_3/bottleneck_v1/add  
FPGA True: maxpool2d  resnet_v1_50/pool1/MaxPool  
FPGA True: conv2d     resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D  
FPGA True: conv2d     resnet_v1_50/conv1/Conv2D  
FPGA True: data       input            
FPGA True: add        resnet_v1_50/block2/unit_2/bottleneck_v1/add  
FPGA True: conv2d     resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D  
FPGA True: conv2d     resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D  
FPGA True: conv2d     resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D  
FPGA True: conv2d     resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D  
FPGA True: conv2d     resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D  
FPGA True: add        resnet_v1_50/block3/unit_2/bottleneck_v1/add  
FPGA True: conv2d     resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D  
FPGA True: conv2d     resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D  
FPGA True: conv2d     resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D  
FPGA True: conv2d     resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D  
FPGA True: conv2d     resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D  
FPGA True: add        resnet_v1_50/block2/unit_4/bottleneck_v1/add  
FPGA True: conv2d     resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D  
FPGA True: conv2d     resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D  
FPGA True: add        resnet_v1_50/block3/unit_1/bottleneck_v1/add  
FPGA True: conv2d     resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D  
FPGA True: conv2d     resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D  
FPGA True: conv2d     resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D  
FPGA True: conv2d     resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D  
FPGA True: conv2d     resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D  
FPGA True: conv2d     resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D  
FPGA True: conv2d     resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D  
FPGA True: conv2d     resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D  
FPGA True: maxpool2d  resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool  
FPGA True: conv2d     resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D  
FPGA True: conv2d     resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D  
delete these dict_keys(['input'])
{'resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D': Name resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D Type conv2d Composed [] Inputs ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D'] 
}
Schedule boost
0 data input False 1
1 conv2d resnet_v1_50/conv1/Conv2D True 1
2 maxpool2d resnet_v1_50/pool1/MaxPool True 1
3 conv2d resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D True 1
4 conv2d resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D True 1
5 conv2d resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D True 1
6 conv2d resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D True 1
7 add resnet_v1_50/block1/unit_1/bottleneck_v1/add True 1
8 conv2d resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D True 1
9 conv2d resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D True 1
10 conv2d resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D True 1
11 add resnet_v1_50/block1/unit_2/bottleneck_v1/add True 1
12 maxpool2d resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool True 1
13 conv2d resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D True 1
14 conv2d resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D True 1
15 conv2d resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D True 1
16 add resnet_v1_50/block1/unit_3/bottleneck_v1/add True 1
17 conv2d resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D True 1
18 conv2d resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D True 1
19 conv2d resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D True 1
20 conv2d resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D True 1
21 add resnet_v1_50/block2/unit_1/bottleneck_v1/add True 1
22 conv2d resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D True 1
23 conv2d resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D True 1
24 conv2d resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D True 1
25 add resnet_v1_50/block2/unit_2/bottleneck_v1/add True 1
26 conv2d resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D True 1
27 conv2d resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D True 1
28 conv2d resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D True 1
29 add resnet_v1_50/block2/unit_3/bottleneck_v1/add True 1
30 maxpool2d resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool True 1
31 conv2d resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D True 1
32 conv2d resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D True 1
33 conv2d resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D True 1
34 add resnet_v1_50/block2/unit_4/bottleneck_v1/add True 1
35 conv2d resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D True 1
36 conv2d resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D True 1
37 conv2d resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D True 1
38 conv2d resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D True 1
39 add resnet_v1_50/block3/unit_1/bottleneck_v1/add True 1
40 conv2d resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D True 1
41 conv2d resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D True 1
42 conv2d resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D True 1
43 add resnet_v1_50/block3/unit_2/bottleneck_v1/add True 1
44 conv2d resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D True 1
45 conv2d resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D True 1
  0 data       input                               Ops 0.000000e+00 IN [] OUT ['resnet_v1_50/conv1/Conv2D']
  1 conv2d     resnet_v1_50/conv1/Conv2D           Ops 4.720558e+08 IN ['input'] OUT ['resnet_v1_50/pool1/MaxPool']
  2 maxpool2d  resnet_v1_50/pool1/MaxPool          Ops 0.000000e+00 IN ['resnet_v1_50/conv1/Conv2D'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D']
  3 conv2d     nit_1/bottleneck_v1/shortcut/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/pool1/MaxPool'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/add']
  4 conv2d     1/unit_1/bottleneck_v1/conv1/Conv2D Ops 5.138022e+07 IN ['resnet_v1_50/pool1/MaxPool'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D']
  5 conv2d     1/unit_1/bottleneck_v1/conv2/Conv2D Ops 4.624220e+08 IN ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D']
  6 conv2d     1/unit_1/bottleneck_v1/conv3/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/add']
  7 add        _50/block1/unit_1/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D', 'resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block1/unit_2/bottleneck_v1/add']
  8 conv2d     1/unit_2/bottleneck_v1/conv1/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block1/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D']
  9 conv2d     1/unit_2/bottleneck_v1/conv2/Conv2D Ops 4.624220e+08 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D']
 10 conv2d     1/unit_2/bottleneck_v1/conv3/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block1/unit_2/bottleneck_v1/add']
 11 add        _50/block1/unit_2/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block1/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool']
 12 maxpool2d  it_3/bottleneck_v1/shortcut/MaxPool Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/add']
 13 conv2d     1/unit_3/bottleneck_v1/conv1/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D']
 14 conv2d     1/unit_3/bottleneck_v1/conv2/Conv2D Ops 1.156055e+08 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D']
 15 conv2d     1/unit_3/bottleneck_v1/conv3/Conv2D Ops 5.138022e+07 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/add']
 16 add        _50/block1/unit_3/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool', 'resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D']
 17 conv2d     nit_1/bottleneck_v1/shortcut/Conv2D Ops 4.110418e+08 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/add']
 18 conv2d     2/unit_1/bottleneck_v1/conv1/Conv2D Ops 1.027604e+08 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D']
 19 conv2d     2/unit_1/bottleneck_v1/conv2/Conv2D Ops 4.624220e+08 IN ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D']
 20 conv2d     2/unit_1/bottleneck_v1/conv3/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/add']
 21 add        _50/block2/unit_1/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D', 'resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block2/unit_2/bottleneck_v1/add']
 22 conv2d     2/unit_2/bottleneck_v1/conv1/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block2/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D']
 23 conv2d     2/unit_2/bottleneck_v1/conv2/Conv2D Ops 4.624220e+08 IN ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D']
 24 conv2d     2/unit_2/bottleneck_v1/conv3/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block2/unit_2/bottleneck_v1/add']
 25 add        _50/block2/unit_2/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block2/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block2/unit_3/bottleneck_v1/add']
 26 conv2d     2/unit_3/bottleneck_v1/conv1/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block2/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D']
 27 conv2d     2/unit_3/bottleneck_v1/conv2/Conv2D Ops 4.624220e+08 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D']
 28 conv2d     2/unit_3/bottleneck_v1/conv3/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block2/unit_3/bottleneck_v1/add']
 29 add        _50/block2/unit_3/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block2/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool']
 30 maxpool2d  it_4/bottleneck_v1/shortcut/MaxPool Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/add']
 31 conv2d     2/unit_4/bottleneck_v1/conv1/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D']
 32 conv2d     2/unit_4/bottleneck_v1/conv2/Conv2D Ops 1.156055e+08 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D']
 33 conv2d     2/unit_4/bottleneck_v1/conv3/Conv2D Ops 5.138022e+07 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/add']
 34 add        _50/block2/unit_4/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool', 'resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D']
 35 conv2d     nit_1/bottleneck_v1/shortcut/Conv2D Ops 4.110418e+08 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/add']
 36 conv2d     3/unit_1/bottleneck_v1/conv1/Conv2D Ops 1.027604e+08 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D']
 37 conv2d     3/unit_1/bottleneck_v1/conv2/Conv2D Ops 4.624220e+08 IN ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D']
 38 conv2d     3/unit_1/bottleneck_v1/conv3/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/add']
 39 add        _50/block3/unit_1/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D', 'resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block3/unit_2/bottleneck_v1/add']
 40 conv2d     3/unit_2/bottleneck_v1/conv1/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block3/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D']
 41 conv2d     3/unit_2/bottleneck_v1/conv2/Conv2D Ops 4.624220e+08 IN ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D']
 42 conv2d     3/unit_2/bottleneck_v1/conv3/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block3/unit_2/bottleneck_v1/add']
 43 add        _50/block3/unit_2/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block3/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D']
 44 conv2d     3/unit_3/bottleneck_v1/conv1/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block3/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D']
 45 conv2d     3/unit_3/bottleneck_v1/conv2/Conv2D Ops 4.624220e+08 IN ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D'] OUT []
Outputs ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D']
Inputs  ['input']
Floyd & Warshall
BFS
 ############################################# 
 ######  Avg Pool -> Conv
 ############################################# 
 ############################################# 
 ######  Inner Products -> Conv
 ############################################# 
 ############################################# 
 ######  Scale -> Conv
 ############################################# 
Floyd & Warshall
BFS
 ############################################# 
 ######  topological schedule BFS
 ############################################# 
 ############################################# 
 ######  WEIGHT & BIAS into Tensors
 ############################################# 
 ############################################# 
 ######  topological DFS
 ############################################# 
DFS_t input
 ############################################# 
 ######  TFS
 ############################################# 
INFO tfs
dfs   1- tfs   0   0 input TensorShapes(batch=4, width=224, height=224, channel=3) [dict_keys([-1, 'fix', 'pad'])]
dfs   2- tfs   1   1 resnet_v1_50/conv1/Conv2D TensorShapes(batch=4, width=112, height=112, channel=64) [dict_keys([1, 2, -1, 'relu'])]
dfs   3- tfs   2   2 resnet_v1_50/pool1/MaxPool TensorShapes(batch=4, width=56, height=56, channel=64) [dict_keys([-1, 'fix'])]
dfs   7- tfs   3   3 resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D TensorShapes(batch=4, width=56, height=56, channel=256) [dict_keys([1, 2, -1, 'fix'])]
dfs   4- tfs   3   3 resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D TensorShapes(batch=4, width=56, height=56, channel=64) [dict_keys([1, 2, -1, 'relu'])]
dfs   5- tfs   4   4 resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D TensorShapes(batch=4, width=56, height=56, channel=64) [dict_keys([1, 2, -1, 'relu'])]
dfs   6- tfs   5   5 resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D TensorShapes(batch=4, width=56, height=56, channel=256) [dict_keys([1, 2, -1, 'fix'])]
dfs   8- tfs   6   6 resnet_v1_50/block1/unit_1/bottleneck_v1/add TensorShapes(batch=4, width=56, height=56, channel=256) [dict_keys([-1, 'relu'])]
dfs   9- tfs   7   7 resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D TensorShapes(batch=4, width=56, height=56, channel=64) [dict_keys([1, 2, -1, 'relu'])]
dfs  10- tfs   8   8 resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D TensorShapes(batch=4, width=56, height=56, channel=64) [dict_keys([1, 2, -1, 'relu'])]
dfs  11- tfs   9   9 resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D TensorShapes(batch=4, width=56, height=56, channel=256) [dict_keys([1, 2, -1, 'fix'])]
dfs  12- tfs  10  10 resnet_v1_50/block1/unit_2/bottleneck_v1/add TensorShapes(batch=4, width=56, height=56, channel=256) [dict_keys([-1, 'relu'])]
dfs  16- tfs  11  11 resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool TensorShapes(batch=4, width=28, height=28, channel=256) [dict_keys([-1, 'fix'])]
dfs  13- tfs  11  11 resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D TensorShapes(batch=4, width=56, height=56, channel=64) [dict_keys([1, 2, -1, 'relu', 'pad'])]
dfs  14- tfs  12  12 resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D TensorShapes(batch=4, width=28, height=28, channel=64) [dict_keys([1, 2, -1, 'relu'])]
dfs  15- tfs  13  13 resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D TensorShapes(batch=4, width=28, height=28, channel=256) [dict_keys([1, 2, -1, 'fix'])]
dfs  17- tfs  14  14 resnet_v1_50/block1/unit_3/bottleneck_v1/add TensorShapes(batch=4, width=28, height=28, channel=256) [dict_keys([-1, 'relu'])]
dfs  18- tfs  15  15 resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D TensorShapes(batch=4, width=28, height=28, channel=128) [dict_keys([1, 2, -1, 'relu'])]
dfs  21- tfs  15  15 resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D TensorShapes(batch=4, width=28, height=28, channel=512) [dict_keys([1, 2, -1, 'fix'])]
dfs  19- tfs  16  16 resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D TensorShapes(batch=4, width=28, height=28, channel=128) [dict_keys([1, 2, -1, 'relu'])]
dfs  20- tfs  17  17 resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D TensorShapes(batch=4, width=28, height=28, channel=512) [dict_keys([1, 2, -1, 'fix'])]
dfs  22- tfs  18  18 resnet_v1_50/block2/unit_1/bottleneck_v1/add TensorShapes(batch=4, width=28, height=28, channel=512) [dict_keys([-1, 'relu'])]
dfs  23- tfs  19  19 resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D TensorShapes(batch=4, width=28, height=28, channel=128) [dict_keys([1, 2, -1, 'relu'])]
dfs  24- tfs  20  20 resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D TensorShapes(batch=4, width=28, height=28, channel=128) [dict_keys([1, 2, -1, 'relu'])]
dfs  25- tfs  21  21 resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D TensorShapes(batch=4, width=28, height=28, channel=512) [dict_keys([1, 2, -1, 'fix'])]
dfs  26- tfs  22  22 resnet_v1_50/block2/unit_2/bottleneck_v1/add TensorShapes(batch=4, width=28, height=28, channel=512) [dict_keys([-1, 'relu'])]
dfs  27- tfs  23  23 resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D TensorShapes(batch=4, width=28, height=28, channel=128) [dict_keys([1, 2, -1, 'relu'])]
dfs  28- tfs  24  24 resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D TensorShapes(batch=4, width=28, height=28, channel=128) [dict_keys([1, 2, -1, 'relu'])]
dfs  29- tfs  25  25 resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D TensorShapes(batch=4, width=28, height=28, channel=512) [dict_keys([1, 2, -1, 'fix'])]
dfs  30- tfs  26  26 resnet_v1_50/block2/unit_3/bottleneck_v1/add TensorShapes(batch=4, width=28, height=28, channel=512) [dict_keys([-1, 'relu'])]
dfs  34- tfs  27  27 resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool TensorShapes(batch=4, width=14, height=14, channel=512) [dict_keys([-1, 'fix'])]
dfs  31- tfs  27  27 resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D TensorShapes(batch=4, width=28, height=28, channel=128) [dict_keys([1, 2, -1, 'relu', 'pad'])]
dfs  32- tfs  28  28 resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D TensorShapes(batch=4, width=14, height=14, channel=128) [dict_keys([1, 2, -1, 'relu'])]
dfs  33- tfs  29  29 resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D TensorShapes(batch=4, width=14, height=14, channel=512) [dict_keys([1, 2, -1, 'fix'])]
dfs  35- tfs  30  30 resnet_v1_50/block2/unit_4/bottleneck_v1/add TensorShapes(batch=4, width=14, height=14, channel=512) [dict_keys([-1, 'relu'])]
dfs  39- tfs  31  31 resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D TensorShapes(batch=4, width=14, height=14, channel=1024) [dict_keys([1, 2, -1, 'fix'])]
dfs  36- tfs  31  31 resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D TensorShapes(batch=4, width=14, height=14, channel=256) [dict_keys([1, 2, -1, 'relu'])]
dfs  37- tfs  32  32 resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D TensorShapes(batch=4, width=14, height=14, channel=256) [dict_keys([1, 2, -1, 'relu'])]
dfs  38- tfs  33  33 resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D TensorShapes(batch=4, width=14, height=14, channel=1024) [dict_keys([1, 2, -1, 'fix'])]
dfs  40- tfs  34  34 resnet_v1_50/block3/unit_1/bottleneck_v1/add TensorShapes(batch=4, width=14, height=14, channel=1024) [dict_keys([-1, 'relu'])]
dfs  41- tfs  35  35 resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D TensorShapes(batch=4, width=14, height=14, channel=256) [dict_keys([1, 2, -1, 'relu'])]
dfs  42- tfs  36  36 resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D TensorShapes(batch=4, width=14, height=14, channel=256) [dict_keys([1, 2, -1, 'relu'])]
dfs  43- tfs  37  37 resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D TensorShapes(batch=4, width=14, height=14, channel=1024) [dict_keys([1, 2, -1, 'fix'])]
dfs  44- tfs  38  38 resnet_v1_50/block3/unit_2/bottleneck_v1/add TensorShapes(batch=4, width=14, height=14, channel=1024) [dict_keys([-1, 'relu'])]
dfs  45- tfs  39  39 resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D TensorShapes(batch=4, width=14, height=14, channel=256) [dict_keys([1, 2, -1, 'relu'])]
dfs  46- tfs  40  40 resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D TensorShapes(batch=4, width=14, height=14, channel=256) [dict_keys([1, 2, -1, 'relu'])]
 ############################################# 
 ######  INC
 ############################################# 
INC
 ############################################# 
 ######  Singleton
 ############################################# 
INFO tfs
dfs   1- inc   0- sn   0- tfs   0   0 input TensorShapes(batch=4, width=224, height=224, channel=3) [dict_keys([-1, 'fix', 'pad'])]
dfs   2- inc   0- sn   1- tfs   1   1 resnet_v1_50/conv1/Conv2D TensorShapes(batch=4, width=112, height=112, channel=64) [dict_keys([1, 2, -1, 'relu'])]
dfs   3- inc   0- sn   2- tfs   2   2 resnet_v1_50/pool1/MaxPool TensorShapes(batch=4, width=56, height=56, channel=64) [dict_keys([-1, 'fix'])]
dfs   7- inc   1- sn   2- tfs   3   3 resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D TensorShapes(batch=4, width=56, height=56, channel=256) [dict_keys([1, 2, -1, 'fix'])]
dfs   4- inc   1- sn   2- tfs   3   3 resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D TensorShapes(batch=4, width=56, height=56, channel=64) [dict_keys([1, 2, -1, 'relu'])]
dfs   5- inc   1- sn   2- tfs   4   4 resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D TensorShapes(batch=4, width=56, height=56, channel=64) [dict_keys([1, 2, -1, 'relu'])]
dfs   6- inc   1- sn   2- tfs   5   5 resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D TensorShapes(batch=4, width=56, height=56, channel=256) [dict_keys([1, 2, -1, 'fix'])]
dfs   8- inc   2- sn   2- tfs   6   6 resnet_v1_50/block1/unit_1/bottleneck_v1/add TensorShapes(batch=4, width=56, height=56, channel=256) [dict_keys([-1, 'relu'])]
dfs   9- inc   3- sn   2- tfs   7   7 resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D TensorShapes(batch=4, width=56, height=56, channel=64) [dict_keys([1, 2, -1, 'relu'])]
dfs  10- inc   3- sn   2- tfs   8   8 resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D TensorShapes(batch=4, width=56, height=56, channel=64) [dict_keys([1, 2, -1, 'relu'])]
dfs  11- inc   3- sn   2- tfs   9   9 resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D TensorShapes(batch=4, width=56, height=56, channel=256) [dict_keys([1, 2, -1, 'fix'])]
dfs  12- inc   4- sn   2- tfs  10  10 resnet_v1_50/block1/unit_2/bottleneck_v1/add TensorShapes(batch=4, width=56, height=56, channel=256) [dict_keys([-1, 'relu'])]
dfs  16- inc   5- sn   2- tfs  11  11 resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool TensorShapes(batch=4, width=28, height=28, channel=256) [dict_keys([-1, 'fix'])]
dfs  13- inc   5- sn   2- tfs  11  11 resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D TensorShapes(batch=4, width=56, height=56, channel=64) [dict_keys([1, 2, -1, 'relu', 'pad'])]
dfs  14- inc   5- sn   2- tfs  12  12 resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D TensorShapes(batch=4, width=28, height=28, channel=64) [dict_keys([1, 2, -1, 'relu'])]
dfs  15- inc   5- sn   2- tfs  13  13 resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D TensorShapes(batch=4, width=28, height=28, channel=256) [dict_keys([1, 2, -1, 'fix'])]
dfs  17- inc   6- sn   2- tfs  14  14 resnet_v1_50/block1/unit_3/bottleneck_v1/add TensorShapes(batch=4, width=28, height=28, channel=256) [dict_keys([-1, 'relu'])]
dfs  18- inc   7- sn   2- tfs  15  15 resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D TensorShapes(batch=4, width=28, height=28, channel=128) [dict_keys([1, 2, -1, 'relu'])]
dfs  21- inc   7- sn   2- tfs  15  15 resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D TensorShapes(batch=4, width=28, height=28, channel=512) [dict_keys([1, 2, -1, 'fix'])]
dfs  19- inc   7- sn   2- tfs  16  16 resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D TensorShapes(batch=4, width=28, height=28, channel=128) [dict_keys([1, 2, -1, 'relu'])]
dfs  20- inc   7- sn   2- tfs  17  17 resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D TensorShapes(batch=4, width=28, height=28, channel=512) [dict_keys([1, 2, -1, 'fix'])]
dfs  22- inc   8- sn   2- tfs  18  18 resnet_v1_50/block2/unit_1/bottleneck_v1/add TensorShapes(batch=4, width=28, height=28, channel=512) [dict_keys([-1, 'relu'])]
dfs  23- inc   9- sn   2- tfs  19  19 resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D TensorShapes(batch=4, width=28, height=28, channel=128) [dict_keys([1, 2, -1, 'relu'])]
dfs  24- inc   9- sn   2- tfs  20  20 resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D TensorShapes(batch=4, width=28, height=28, channel=128) [dict_keys([1, 2, -1, 'relu'])]
dfs  25- inc   9- sn   2- tfs  21  21 resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D TensorShapes(batch=4, width=28, height=28, channel=512) [dict_keys([1, 2, -1, 'fix'])]
dfs  26- inc  10- sn   2- tfs  22  22 resnet_v1_50/block2/unit_2/bottleneck_v1/add TensorShapes(batch=4, width=28, height=28, channel=512) [dict_keys([-1, 'relu'])]
dfs  27- inc  11- sn   2- tfs  23  23 resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D TensorShapes(batch=4, width=28, height=28, channel=128) [dict_keys([1, 2, -1, 'relu'])]
dfs  28- inc  11- sn   2- tfs  24  24 resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D TensorShapes(batch=4, width=28, height=28, channel=128) [dict_keys([1, 2, -1, 'relu'])]
dfs  29- inc  11- sn   2- tfs  25  25 resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D TensorShapes(batch=4, width=28, height=28, channel=512) [dict_keys([1, 2, -1, 'fix'])]
dfs  30- inc  12- sn   2- tfs  26  26 resnet_v1_50/block2/unit_3/bottleneck_v1/add TensorShapes(batch=4, width=28, height=28, channel=512) [dict_keys([-1, 'relu'])]
dfs  34- inc  13- sn   2- tfs  27  27 resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool TensorShapes(batch=4, width=14, height=14, channel=512) [dict_keys([-1, 'fix'])]
dfs  31- inc  13- sn   2- tfs  27  27 resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D TensorShapes(batch=4, width=28, height=28, channel=128) [dict_keys([1, 2, -1, 'relu', 'pad'])]
dfs  32- inc  13- sn   2- tfs  28  28 resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D TensorShapes(batch=4, width=14, height=14, channel=128) [dict_keys([1, 2, -1, 'relu'])]
dfs  33- inc  13- sn   2- tfs  29  29 resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D TensorShapes(batch=4, width=14, height=14, channel=512) [dict_keys([1, 2, -1, 'fix'])]
dfs  35- inc  14- sn   2- tfs  30  30 resnet_v1_50/block2/unit_4/bottleneck_v1/add TensorShapes(batch=4, width=14, height=14, channel=512) [dict_keys([-1, 'relu'])]
dfs  39- inc  15- sn   2- tfs  31  31 resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D TensorShapes(batch=4, width=14, height=14, channel=1024) [dict_keys([1, 2, -1, 'fix'])]
dfs  36- inc  15- sn   2- tfs  31  31 resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D TensorShapes(batch=4, width=14, height=14, channel=256) [dict_keys([1, 2, -1, 'relu'])]
dfs  37- inc  15- sn   2- tfs  32  32 resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D TensorShapes(batch=4, width=14, height=14, channel=256) [dict_keys([1, 2, -1, 'relu'])]
dfs  38- inc  15- sn   2- tfs  33  33 resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D TensorShapes(batch=4, width=14, height=14, channel=1024) [dict_keys([1, 2, -1, 'fix'])]
dfs  40- inc  16- sn   2- tfs  34  34 resnet_v1_50/block3/unit_1/bottleneck_v1/add TensorShapes(batch=4, width=14, height=14, channel=1024) [dict_keys([-1, 'relu'])]
dfs  41- inc  17- sn   2- tfs  35  35 resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D TensorShapes(batch=4, width=14, height=14, channel=256) [dict_keys([1, 2, -1, 'relu'])]
dfs  42- inc  17- sn   2- tfs  36  36 resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D TensorShapes(batch=4, width=14, height=14, channel=256) [dict_keys([1, 2, -1, 'relu'])]
dfs  43- inc  17- sn   2- tfs  37  37 resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D TensorShapes(batch=4, width=14, height=14, channel=1024) [dict_keys([1, 2, -1, 'fix'])]
dfs  44- inc  18- sn   2- tfs  38  38 resnet_v1_50/block3/unit_2/bottleneck_v1/add TensorShapes(batch=4, width=14, height=14, channel=1024) [dict_keys([-1, 'relu'])]
dfs  45- inc  18- sn   2- tfs  39  39 resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D TensorShapes(batch=4, width=14, height=14, channel=256) [dict_keys([1, 2, -1, 'relu'])]
dfs  46- inc  18- sn   2- tfs  40  40 resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D TensorShapes(batch=4, width=14, height=14, channel=256) [dict_keys([1, 2, -1, 'relu'])]
  0 data       input                               Ops 0.000000e+00 IN [] OUT ['resnet_v1_50/conv1/Conv2D']
  1 conv2d     resnet_v1_50/conv1/Conv2D           Ops 4.720558e+08 IN ['input'] OUT ['resnet_v1_50/pool1/MaxPool']
  2 maxpool2d  resnet_v1_50/pool1/MaxPool          Ops 0.000000e+00 IN ['resnet_v1_50/conv1/Conv2D'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D']
  3 conv2d     nit_1/bottleneck_v1/shortcut/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/pool1/MaxPool'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/add']
  4 conv2d     1/unit_1/bottleneck_v1/conv1/Conv2D Ops 5.138022e+07 IN ['resnet_v1_50/pool1/MaxPool'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D']
  5 conv2d     1/unit_1/bottleneck_v1/conv2/Conv2D Ops 4.624220e+08 IN ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D']
  6 conv2d     1/unit_1/bottleneck_v1/conv3/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block1/unit_1/bottleneck_v1/add']
  7 add        _50/block1/unit_1/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D', 'resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block1/unit_2/bottleneck_v1/add']
  8 conv2d     1/unit_2/bottleneck_v1/conv1/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block1/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D']
  9 conv2d     1/unit_2/bottleneck_v1/conv2/Conv2D Ops 4.624220e+08 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D']
 10 conv2d     1/unit_2/bottleneck_v1/conv3/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block1/unit_2/bottleneck_v1/add']
 11 add        _50/block1/unit_2/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block1/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool']
 12 maxpool2d  it_3/bottleneck_v1/shortcut/MaxPool Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/add']
 13 conv2d     1/unit_3/bottleneck_v1/conv1/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block1/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D']
 14 conv2d     1/unit_3/bottleneck_v1/conv2/Conv2D Ops 1.156055e+08 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D']
 15 conv2d     1/unit_3/bottleneck_v1/conv3/Conv2D Ops 5.138022e+07 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block1/unit_3/bottleneck_v1/add']
 16 add        _50/block1/unit_3/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool', 'resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D']
 17 conv2d     nit_1/bottleneck_v1/shortcut/Conv2D Ops 4.110418e+08 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/add']
 18 conv2d     2/unit_1/bottleneck_v1/conv1/Conv2D Ops 1.027604e+08 IN ['resnet_v1_50/block1/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D']
 19 conv2d     2/unit_1/bottleneck_v1/conv2/Conv2D Ops 4.624220e+08 IN ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D']
 20 conv2d     2/unit_1/bottleneck_v1/conv3/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block2/unit_1/bottleneck_v1/add']
 21 add        _50/block2/unit_1/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D', 'resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block2/unit_2/bottleneck_v1/add']
 22 conv2d     2/unit_2/bottleneck_v1/conv1/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block2/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D']
 23 conv2d     2/unit_2/bottleneck_v1/conv2/Conv2D Ops 4.624220e+08 IN ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D']
 24 conv2d     2/unit_2/bottleneck_v1/conv3/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block2/unit_2/bottleneck_v1/add']
 25 add        _50/block2/unit_2/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block2/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block2/unit_3/bottleneck_v1/add']
 26 conv2d     2/unit_3/bottleneck_v1/conv1/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block2/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D']
 27 conv2d     2/unit_3/bottleneck_v1/conv2/Conv2D Ops 4.624220e+08 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D']
 28 conv2d     2/unit_3/bottleneck_v1/conv3/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block2/unit_3/bottleneck_v1/add']
 29 add        _50/block2/unit_3/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block2/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool']
 30 maxpool2d  it_4/bottleneck_v1/shortcut/MaxPool Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/add']
 31 conv2d     2/unit_4/bottleneck_v1/conv1/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block2/unit_3/bottleneck_v1/add'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D']
 32 conv2d     2/unit_4/bottleneck_v1/conv2/Conv2D Ops 1.156055e+08 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D']
 33 conv2d     2/unit_4/bottleneck_v1/conv3/Conv2D Ops 5.138022e+07 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block2/unit_4/bottleneck_v1/add']
 34 add        _50/block2/unit_4/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool', 'resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D']
 35 conv2d     nit_1/bottleneck_v1/shortcut/Conv2D Ops 4.110418e+08 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/add']
 36 conv2d     3/unit_1/bottleneck_v1/conv1/Conv2D Ops 1.027604e+08 IN ['resnet_v1_50/block2/unit_4/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D']
 37 conv2d     3/unit_1/bottleneck_v1/conv2/Conv2D Ops 4.624220e+08 IN ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D']
 38 conv2d     3/unit_1/bottleneck_v1/conv3/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block3/unit_1/bottleneck_v1/add']
 39 add        _50/block3/unit_1/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D', 'resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D'] OUT ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D', 'resnet_v1_50/block3/unit_2/bottleneck_v1/add']
 40 conv2d     3/unit_2/bottleneck_v1/conv1/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block3/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D']
 41 conv2d     3/unit_2/bottleneck_v1/conv2/Conv2D Ops 4.624220e+08 IN ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D'] OUT ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D']
 42 conv2d     3/unit_2/bottleneck_v1/conv3/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D'] OUT ['resnet_v1_50/block3/unit_2/bottleneck_v1/add']
 43 add        _50/block3/unit_2/bottleneck_v1/add Ops 0.000000e+00 IN ['resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D', 'resnet_v1_50/block3/unit_1/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D']
 44 conv2d     3/unit_3/bottleneck_v1/conv1/Conv2D Ops 2.055209e+08 IN ['resnet_v1_50/block3/unit_2/bottleneck_v1/add'] OUT ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D']
 45 conv2d     3/unit_3/bottleneck_v1/conv2/Conv2D Ops 4.624220e+08 IN ['resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D'] OUT []
 ############################################# 
 ######  Given a Graph and Schedule boost : We crete Live Tensor
 ############################################# 
 ############################################# 
 ######  Reset Live Structure
 ############################################# 
 ############################################# 
 ######  Attempting Code Generation boost
 ############################################# 
 ############################################# 
 ######  Element Wise: reuse one of the operands
 ############################################# 
 ############################################# 
 ######  Concatenation: I love concatenation memory reuse
 ############################################# 
 ############################################# 
 ######  Memory Management given a Schedule
 ############################################# 
Namespace(address=None, avgpool_as_convolution=True, backwardcut=None, biaspatch='true', caffemodel=None, circus='True', fc=False, final=False, firstlayerreshape=False, forwardcut='resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D', framework='tensorflow', inner_as_convolution=True, inshapes='[4,224,224,3]', json='SC/meta.json', network='examples/tf_resnetv1_50_imagenet_224_224_6.97G/quantized/quantize_eval_model.pb', nocpu=True, operation_fusion=False, operation_fusion_elt=False, operation_fusion_pool_conv=False, output='SC/work/manasa/tf/all-frompic/45/out.asm', parallelismgraphalgorithm=None, parallelismstrategy="['bottom','top']", params='SC/work/manasa/tf/all-frompic/45/params.txt', prefetch=False, quant=None, skip=False, softwarepipeline=False)
Name resnet_v1_50/conv1/Conv2D_weight Parameter True	Space 401408 bits, BitePerPixel 8 Fraction 12 Start 0 End 401408	Specifier 0 Layout 3 Time 1 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=64, width=7, height=7, channel=3)
int8
	reshape_wgt_to_ddr() (64, 7, 7, 3) done ... 
0x30000000 0x3000c400 Name resnet_v1_50/conv1/Conv2D_weight Parameter True	Space 401408 bits, BitePerPixel 8 Fraction 12 Start 0 End 401408	Specifier 0 Layout 3 Time 1 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=64, width=7, height=7, channel=3)
50176
	dump_ddr_data() done ...
Filing 1024
1024
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x3000c800 0x3000c900 Name resnet_v1_50/conv1/Conv2D_bias Parameter True	Space 2048 bits, BitePerPixel 32 Fraction 4 Start 409600 End 411648	Specifier 0 Layout 3 Time 2 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=64)
256
	dump_ddr_data() done ...
Filing 1792
1792
	dump_ddr_data() done ...
Name resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_weight Parameter True	Space 131072 bits, BitePerPixel 8 Fraction 6 Start 425984 End 557056	Specifier 0 Layout 3 Time 3 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=256, width=1, height=1, channel=64)
int8
	reshape_wgt_to_ddr() (256, 1, 1, 64) done ... 
0x3000d000 0x30011000 Name resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_weight Parameter True	Space 131072 bits, BitePerPixel 8 Fraction 6 Start 425984 End 557056	Specifier 0 Layout 3 Time 3 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=256, width=1, height=1, channel=64)
16384
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x30011000 0x30011400 Name resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D_bias Parameter True	Space 8192 bits, BitePerPixel 32 Fraction 3 Start 557056 End 565248	Specifier 0 Layout 3 Time 4 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=256)
1024
	dump_ddr_data() done ...
Filing 1024
1024
	dump_ddr_data() done ...
Name resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_weight Parameter True	Space 32768 bits, BitePerPixel 8 Fraction 7 Start 573440 End 606208	Specifier 0 Layout 3 Time 5 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=64, width=1, height=1, channel=64)
int8
	reshape_wgt_to_ddr() (64, 1, 1, 64) done ... 
0x30011800 0x30012800 Name resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_weight Parameter True	Space 32768 bits, BitePerPixel 8 Fraction 7 Start 573440 End 606208	Specifier 0 Layout 3 Time 5 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=64, width=1, height=1, channel=64)
4096
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x30012800 0x30012900 Name resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D_bias Parameter True	Space 2048 bits, BitePerPixel 32 Fraction 4 Start 606208 End 608256	Specifier 0 Layout 3 Time 6 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=64)
256
	dump_ddr_data() done ...
Filing 1792
1792
	dump_ddr_data() done ...
Name resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_weight Parameter True	Space 294912 bits, BitePerPixel 8 Fraction 9 Start 622592 End 917504	Specifier 0 Layout 3 Time 7 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=64, width=3, height=3, channel=64)
int8
	reshape_wgt_to_ddr() (64, 3, 3, 64) done ... 
0x30013000 0x3001c000 Name resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_weight Parameter True	Space 294912 bits, BitePerPixel 8 Fraction 9 Start 622592 End 917504	Specifier 0 Layout 3 Time 7 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=64, width=3, height=3, channel=64)
36864
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x3001c000 0x3001c100 Name resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D_bias Parameter True	Space 2048 bits, BitePerPixel 32 Fraction 4 Start 917504 End 919552	Specifier 0 Layout 3 Time 8 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=64)
256
	dump_ddr_data() done ...
Filing 1792
1792
	dump_ddr_data() done ...
Name resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_weight Parameter True	Space 131072 bits, BitePerPixel 8 Fraction 6 Start 933888 End 1064960	Specifier 0 Layout 3 Time 9 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=256, width=1, height=1, channel=64)
int8
	reshape_wgt_to_ddr() (256, 1, 1, 64) done ... 
0x3001c800 0x30020800 Name resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_weight Parameter True	Space 131072 bits, BitePerPixel 8 Fraction 6 Start 933888 End 1064960	Specifier 0 Layout 3 Time 9 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=256, width=1, height=1, channel=64)
16384
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x30020800 0x30020c00 Name resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D_bias Parameter True	Space 8192 bits, BitePerPixel 32 Fraction 4 Start 1064960 End 1073152	Specifier 0 Layout 3 Time 10 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=256)
1024
	dump_ddr_data() done ...
Filing 1024
1024
	dump_ddr_data() done ...
Name resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_weight Parameter True	Space 131072 bits, BitePerPixel 8 Fraction 8 Start 1081344 End 1212416	Specifier 0 Layout 3 Time 11 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=64, width=1, height=1, channel=256)
int8
	reshape_wgt_to_ddr() (64, 1, 1, 256) done ... 
0x30021000 0x30025000 Name resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_weight Parameter True	Space 131072 bits, BitePerPixel 8 Fraction 8 Start 1081344 End 1212416	Specifier 0 Layout 3 Time 11 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=64, width=1, height=1, channel=256)
16384
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x30025000 0x30025100 Name resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D_bias Parameter True	Space 2048 bits, BitePerPixel 32 Fraction 4 Start 1212416 End 1214464	Specifier 0 Layout 3 Time 12 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=64)
256
	dump_ddr_data() done ...
Filing 1792
1792
	dump_ddr_data() done ...
Name resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_weight Parameter True	Space 294912 bits, BitePerPixel 8 Fraction 8 Start 1228800 End 1523712	Specifier 0 Layout 3 Time 13 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=64, width=3, height=3, channel=64)
int8
	reshape_wgt_to_ddr() (64, 3, 3, 64) done ... 
0x30025800 0x3002e800 Name resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_weight Parameter True	Space 294912 bits, BitePerPixel 8 Fraction 8 Start 1228800 End 1523712	Specifier 0 Layout 3 Time 13 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=64, width=3, height=3, channel=64)
36864
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x3002e800 0x3002e900 Name resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D_bias Parameter True	Space 2048 bits, BitePerPixel 32 Fraction 5 Start 1523712 End 1525760	Specifier 0 Layout 3 Time 14 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=64)
256
	dump_ddr_data() done ...
Filing 1792
1792
	dump_ddr_data() done ...
Name resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_weight Parameter True	Space 131072 bits, BitePerPixel 8 Fraction 6 Start 1540096 End 1671168	Specifier 0 Layout 3 Time 15 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=256, width=1, height=1, channel=64)
int8
	reshape_wgt_to_ddr() (256, 1, 1, 64) done ... 
0x3002f000 0x30033000 Name resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_weight Parameter True	Space 131072 bits, BitePerPixel 8 Fraction 6 Start 1540096 End 1671168	Specifier 0 Layout 3 Time 15 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=256, width=1, height=1, channel=64)
16384
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x30033000 0x30033400 Name resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D_bias Parameter True	Space 8192 bits, BitePerPixel 32 Fraction 4 Start 1671168 End 1679360	Specifier 0 Layout 3 Time 16 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=256)
1024
	dump_ddr_data() done ...
Filing 1024
1024
	dump_ddr_data() done ...
Name resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_weight Parameter True	Space 131072 bits, BitePerPixel 8 Fraction 8 Start 1687552 End 1818624	Specifier 0 Layout 3 Time 17 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=64, width=1, height=1, channel=256)
int8
	reshape_wgt_to_ddr() (64, 1, 1, 256) done ... 
0x30033800 0x30037800 Name resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_weight Parameter True	Space 131072 bits, BitePerPixel 8 Fraction 8 Start 1687552 End 1818624	Specifier 0 Layout 3 Time 17 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=64, width=1, height=1, channel=256)
16384
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x30037800 0x30037900 Name resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D_bias Parameter True	Space 2048 bits, BitePerPixel 32 Fraction 4 Start 1818624 End 1820672	Specifier 0 Layout 3 Time 18 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=64)
256
	dump_ddr_data() done ...
Filing 1792
1792
	dump_ddr_data() done ...
Name resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_weight Parameter True	Space 294912 bits, BitePerPixel 8 Fraction 8 Start 1835008 End 2129920	Specifier 0 Layout 3 Time 19 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=64, width=3, height=3, channel=64)
int8
	reshape_wgt_to_ddr() (64, 3, 3, 64) done ... 
0x30038000 0x30041000 Name resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_weight Parameter True	Space 294912 bits, BitePerPixel 8 Fraction 8 Start 1835008 End 2129920	Specifier 0 Layout 3 Time 19 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=64, width=3, height=3, channel=64)
36864
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x30041000 0x30041100 Name resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_bias Parameter True	Space 2048 bits, BitePerPixel 32 Fraction 5 Start 2129920 End 2131968	Specifier 0 Layout 3 Time 20 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=64)
256
	dump_ddr_data() done ...
Filing 1792
1792
	dump_ddr_data() done ...
Name resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_weight Parameter True	Space 131072 bits, BitePerPixel 8 Fraction 7 Start 2146304 End 2277376	Specifier 0 Layout 3 Time 21 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=256, width=1, height=1, channel=64)
int8
	reshape_wgt_to_ddr() (256, 1, 1, 64) done ... 
0x30041800 0x30045800 Name resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_weight Parameter True	Space 131072 bits, BitePerPixel 8 Fraction 7 Start 2146304 End 2277376	Specifier 0 Layout 3 Time 21 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=256, width=1, height=1, channel=64)
16384
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x30045800 0x30045c00 Name resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D_bias Parameter True	Space 8192 bits, BitePerPixel 32 Fraction 5 Start 2277376 End 2285568	Specifier 0 Layout 3 Time 22 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=256)
1024
	dump_ddr_data() done ...
Filing 1024
1024
	dump_ddr_data() done ...
Name resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_weight Parameter True	Space 1048576 bits, BitePerPixel 8 Fraction 8 Start 2293760 End 3342336	Specifier 0 Layout 3 Time 23 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=512, width=1, height=1, channel=256)
int8
	reshape_wgt_to_ddr() (512, 1, 1, 256) done ... 
0x30046000 0x30066000 Name resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_weight Parameter True	Space 1048576 bits, BitePerPixel 8 Fraction 8 Start 2293760 End 3342336	Specifier 0 Layout 3 Time 23 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=512, width=1, height=1, channel=256)
131072
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x30066000 0x30066800 Name resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D_bias Parameter True	Space 16384 bits, BitePerPixel 32 Fraction 4 Start 3342336 End 3358720	Specifier 0 Layout 3 Time 24 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=512)
2048
	dump_ddr_data() done ...
Name resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_weight Parameter True	Space 262144 bits, BitePerPixel 8 Fraction 8 Start 3358720 End 3620864	Specifier 0 Layout 3 Time 25 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=128, width=1, height=1, channel=256)
int8
	reshape_wgt_to_ddr() (128, 1, 1, 256) done ... 
0x30066800 0x3006e800 Name resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_weight Parameter True	Space 262144 bits, BitePerPixel 8 Fraction 8 Start 3358720 End 3620864	Specifier 0 Layout 3 Time 25 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=128, width=1, height=1, channel=256)
32768
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x3006e800 0x3006ea00 Name resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D_bias Parameter True	Space 4096 bits, BitePerPixel 32 Fraction 5 Start 3620864 End 3624960	Specifier 0 Layout 3 Time 26 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=128)
512
	dump_ddr_data() done ...
Filing 1536
1536
	dump_ddr_data() done ...
Name resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_weight Parameter True	Space 1179648 bits, BitePerPixel 8 Fraction 9 Start 3637248 End 4816896	Specifier 0 Layout 3 Time 27 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=128, width=3, height=3, channel=128)
int8
	reshape_wgt_to_ddr() (128, 3, 3, 128) done ... 
0x3006f000 0x30093000 Name resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_weight Parameter True	Space 1179648 bits, BitePerPixel 8 Fraction 9 Start 3637248 End 4816896	Specifier 0 Layout 3 Time 27 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=128, width=3, height=3, channel=128)
147456
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x30093000 0x30093200 Name resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D_bias Parameter True	Space 4096 bits, BitePerPixel 32 Fraction 4 Start 4816896 End 4820992	Specifier 0 Layout 3 Time 28 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=128)
512
	dump_ddr_data() done ...
Filing 1536
1536
	dump_ddr_data() done ...
Name resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_weight Parameter True	Space 524288 bits, BitePerPixel 8 Fraction 6 Start 4833280 End 5357568	Specifier 0 Layout 3 Time 29 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=512, width=1, height=1, channel=128)
int8
	reshape_wgt_to_ddr() (512, 1, 1, 128) done ... 
0x30093800 0x300a3800 Name resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_weight Parameter True	Space 524288 bits, BitePerPixel 8 Fraction 6 Start 4833280 End 5357568	Specifier 0 Layout 3 Time 29 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=512, width=1, height=1, channel=128)
65536
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x300a3800 0x300a4000 Name resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D_bias Parameter True	Space 16384 bits, BitePerPixel 32 Fraction 4 Start 5357568 End 5373952	Specifier 0 Layout 3 Time 30 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=512)
2048
	dump_ddr_data() done ...
Name resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_weight Parameter True	Space 524288 bits, BitePerPixel 8 Fraction 9 Start 5373952 End 5898240	Specifier 0 Layout 3 Time 31 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=128, width=1, height=1, channel=512)
int8
	reshape_wgt_to_ddr() (128, 1, 1, 512) done ... 
0x300a4000 0x300b4000 Name resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_weight Parameter True	Space 524288 bits, BitePerPixel 8 Fraction 9 Start 5373952 End 5898240	Specifier 0 Layout 3 Time 31 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=128, width=1, height=1, channel=512)
65536
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x300b4000 0x300b4200 Name resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D_bias Parameter True	Space 4096 bits, BitePerPixel 32 Fraction 5 Start 5898240 End 5902336	Specifier 0 Layout 3 Time 32 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=128)
512
	dump_ddr_data() done ...
Filing 1536
1536
	dump_ddr_data() done ...
Name resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_weight Parameter True	Space 1179648 bits, BitePerPixel 8 Fraction 9 Start 5914624 End 7094272	Specifier 0 Layout 3 Time 33 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=128, width=3, height=3, channel=128)
int8
	reshape_wgt_to_ddr() (128, 3, 3, 128) done ... 
0x300b4800 0x300d8800 Name resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_weight Parameter True	Space 1179648 bits, BitePerPixel 8 Fraction 9 Start 5914624 End 7094272	Specifier 0 Layout 3 Time 33 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=128, width=3, height=3, channel=128)
147456
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x300d8800 0x300d8a00 Name resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D_bias Parameter True	Space 4096 bits, BitePerPixel 32 Fraction 5 Start 7094272 End 7098368	Specifier 0 Layout 3 Time 34 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=128)
512
	dump_ddr_data() done ...
Filing 1536
1536
	dump_ddr_data() done ...
Name resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_weight Parameter True	Space 524288 bits, BitePerPixel 8 Fraction 6 Start 7110656 End 7634944	Specifier 0 Layout 3 Time 35 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=512, width=1, height=1, channel=128)
int8
	reshape_wgt_to_ddr() (512, 1, 1, 128) done ... 
0x300d9000 0x300e9000 Name resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_weight Parameter True	Space 524288 bits, BitePerPixel 8 Fraction 6 Start 7110656 End 7634944	Specifier 0 Layout 3 Time 35 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=512, width=1, height=1, channel=128)
65536
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x300e9000 0x300e9800 Name resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D_bias Parameter True	Space 16384 bits, BitePerPixel 32 Fraction 5 Start 7634944 End 7651328	Specifier 0 Layout 3 Time 36 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=512)
2048
	dump_ddr_data() done ...
Name resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_weight Parameter True	Space 524288 bits, BitePerPixel 8 Fraction 8 Start 7651328 End 8175616	Specifier 0 Layout 3 Time 37 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=128, width=1, height=1, channel=512)
int8
	reshape_wgt_to_ddr() (128, 1, 1, 512) done ... 
0x300e9800 0x300f9800 Name resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_weight Parameter True	Space 524288 bits, BitePerPixel 8 Fraction 8 Start 7651328 End 8175616	Specifier 0 Layout 3 Time 37 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=128, width=1, height=1, channel=512)
65536
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x300f9800 0x300f9a00 Name resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D_bias Parameter True	Space 4096 bits, BitePerPixel 32 Fraction 5 Start 8175616 End 8179712	Specifier 0 Layout 3 Time 38 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=128)
512
	dump_ddr_data() done ...
Filing 1536
1536
	dump_ddr_data() done ...
Name resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_weight Parameter True	Space 1179648 bits, BitePerPixel 8 Fraction 7 Start 8192000 End 9371648	Specifier 0 Layout 3 Time 39 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=128, width=3, height=3, channel=128)
int8
	reshape_wgt_to_ddr() (128, 3, 3, 128) done ... 
0x300fa000 0x3011e000 Name resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_weight Parameter True	Space 1179648 bits, BitePerPixel 8 Fraction 7 Start 8192000 End 9371648	Specifier 0 Layout 3 Time 39 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=128, width=3, height=3, channel=128)
147456
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x3011e000 0x3011e200 Name resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D_bias Parameter True	Space 4096 bits, BitePerPixel 32 Fraction 4 Start 9371648 End 9375744	Specifier 0 Layout 3 Time 40 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=128)
512
	dump_ddr_data() done ...
Filing 1536
1536
	dump_ddr_data() done ...
Name resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_weight Parameter True	Space 524288 bits, BitePerPixel 8 Fraction 6 Start 9388032 End 9912320	Specifier 0 Layout 3 Time 41 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=512, width=1, height=1, channel=128)
int8
	reshape_wgt_to_ddr() (512, 1, 1, 128) done ... 
0x3011e800 0x3012e800 Name resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_weight Parameter True	Space 524288 bits, BitePerPixel 8 Fraction 6 Start 9388032 End 9912320	Specifier 0 Layout 3 Time 41 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=512, width=1, height=1, channel=128)
65536
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x3012e800 0x3012f000 Name resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D_bias Parameter True	Space 16384 bits, BitePerPixel 32 Fraction 5 Start 9912320 End 9928704	Specifier 0 Layout 3 Time 42 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=512)

2048
	dump_ddr_data() done ...
Name resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_weight Parameter True	Space 524288 bits, BitePerPixel 8 Fraction 8 Start 9928704 End 10452992	Specifier 0 Layout 3 Time 43 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=128, width=1, height=1, channel=512)
int8
	reshape_wgt_to_ddr() (128, 1, 1, 512) done ... 
0x3012f000 0x3013f000 Name resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_weight Parameter True	Space 524288 bits, BitePerPixel 8 Fraction 8 Start 9928704 End 10452992	Specifier 0 Layout 3 Time 43 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=128, width=1, height=1, channel=512)
65536
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x3013f000 0x3013f200 Name resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D_bias Parameter True	Space 4096 bits, BitePerPixel 32 Fraction 5 Start 10452992 End 10457088	Specifier 0 Layout 3 Time 44 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=128)
512
	dump_ddr_data() done ...
Filing 1536
1536
	dump_ddr_data() done ...
Name resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_weight Parameter True	Space 1179648 bits, BitePerPixel 8 Fraction 9 Start 10469376 End 11649024	Specifier 0 Layout 3 Time 45 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=128, width=3, height=3, channel=128)
int8
	reshape_wgt_to_ddr() (128, 3, 3, 128) done ... 
0x3013f800 0x30163800 Name resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_weight Parameter True	Space 1179648 bits, BitePerPixel 8 Fraction 9 Start 10469376 End 11649024	Specifier 0 Layout 3 Time 45 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=128, width=3, height=3, channel=128)
147456
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x30163800 0x30163a00 Name resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_bias Parameter True	Space 4096 bits, BitePerPixel 32 Fraction 6 Start 11649024 End 11653120	Specifier 0 Layout 3 Time 46 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=128)
512
	dump_ddr_data() done ...
Filing 1536
1536
	dump_ddr_data() done ...
Name resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_weight Parameter True	Space 524288 bits, BitePerPixel 8 Fraction 7 Start 11665408 End 12189696	Specifier 0 Layout 3 Time 47 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=512, width=1, height=1, channel=128)
int8
	reshape_wgt_to_ddr() (512, 1, 1, 128) done ... 
0x30164000 0x30174000 Name resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_weight Parameter True	Space 524288 bits, BitePerPixel 8 Fraction 7 Start 11665408 End 12189696	Specifier 0 Layout 3 Time 47 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=512, width=1, height=1, channel=128)
65536
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x30174000 0x30174800 Name resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D_bias Parameter True	Space 16384 bits, BitePerPixel 32 Fraction 5 Start 12189696 End 12206080	Specifier 0 Layout 3 Time 48 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=512)
2048
	dump_ddr_data() done ...
Name resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_weight Parameter True	Space 4194304 bits, BitePerPixel 8 Fraction 8 Start 12206080 End 16400384	Specifier 0 Layout 3 Time 49 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1024, width=1, height=1, channel=512)
int8
	reshape_wgt_to_ddr() (1024, 1, 1, 512) done ... 
0x30174800 0x301f4800 Name resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_weight Parameter True	Space 4194304 bits, BitePerPixel 8 Fraction 8 Start 12206080 End 16400384	Specifier 0 Layout 3 Time 49 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1024, width=1, height=1, channel=512)
524288
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x301f4800 0x301f5800 Name resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D_bias Parameter True	Space 32768 bits, BitePerPixel 32 Fraction 5 Start 16400384 End 16433152	Specifier 0 Layout 3 Time 50 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=1024)
4096
	dump_ddr_data() done ...
Name resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_weight Parameter True	Space 1048576 bits, BitePerPixel 8 Fraction 9 Start 16433152 End 17481728	Specifier 0 Layout 3 Time 51 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=256, width=1, height=1, channel=512)
int8
	reshape_wgt_to_ddr() (256, 1, 1, 512) done ... 
0x301f5800 0x30215800 Name resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_weight Parameter True	Space 1048576 bits, BitePerPixel 8 Fraction 9 Start 16433152 End 17481728	Specifier 0 Layout 3 Time 51 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=256, width=1, height=1, channel=512)
131072
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x30215800 0x30215c00 Name resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D_bias Parameter True	Space 8192 bits, BitePerPixel 32 Fraction 5 Start 17481728 End 17489920	Specifier 0 Layout 3 Time 52 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=256)
1024
	dump_ddr_data() done ...
Filing 1024
1024
	dump_ddr_data() done ...
Name resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_weight Parameter True	Space 4718592 bits, BitePerPixel 8 Fraction 9 Start 17498112 End 22216704	Specifier 0 Layout 3 Time 53 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=256, width=3, height=3, channel=256)
int8
	reshape_wgt_to_ddr() (256, 3, 3, 256) done ... 
0x30216000 0x302a6000 Name resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_weight Parameter True	Space 4718592 bits, BitePerPixel 8 Fraction 9 Start 17498112 End 22216704	Specifier 0 Layout 3 Time 53 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=256, width=3, height=3, channel=256)
589824
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x302a6000 0x302a6400 Name resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D_bias Parameter True	Space 8192 bits, BitePerPixel 32 Fraction 5 Start 22216704 End 22224896	Specifier 0 Layout 3 Time 54 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=256)
1024
	dump_ddr_data() done ...
Filing 1024
1024
	dump_ddr_data() done ...
Name resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_weight Parameter True	Space 2097152 bits, BitePerPixel 8 Fraction 7 Start 22233088 End 24330240	Specifier 0 Layout 3 Time 55 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1024, width=1, height=1, channel=256)
int8
	reshape_wgt_to_ddr() (1024, 1, 1, 256) done ... 
0x302a6800 0x302e6800 Name resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_weight Parameter True	Space 2097152 bits, BitePerPixel 8 Fraction 7 Start 22233088 End 24330240	Specifier 0 Layout 3 Time 55 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1024, width=1, height=1, channel=256)
262144
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x302e6800 0x302e7800 Name resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D_bias Parameter True	Space 32768 bits, BitePerPixel 32 Fraction 5 Start 24330240 End 24363008	Specifier 0 Layout 3 Time 56 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=1024)
4096
	dump_ddr_data() done ...
Name resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_weight Parameter True	Space 2097152 bits, BitePerPixel 8 Fraction 9 Start 24363008 End 26460160	Specifier 0 Layout 3 Time 57 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=256, width=1, height=1, channel=1024)
int8
	reshape_wgt_to_ddr() (256, 1, 1, 1024) done ... 
0x302e7800 0x30327800 Name resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_weight Parameter True	Space 2097152 bits, BitePerPixel 8 Fraction 9 Start 24363008 End 26460160	Specifier 0 Layout 3 Time 57 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=256, width=1, height=1, channel=1024)
262144
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x30327800 0x30327c00 Name resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D_bias Parameter True	Space 8192 bits, BitePerPixel 32 Fraction 5 Start 26460160 End 26468352	Specifier 0 Layout 3 Time 58 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=256)
1024
	dump_ddr_data() done ...
Filing 1024
1024
	dump_ddr_data() done ...
Name resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_weight Parameter True	Space 4718592 bits, BitePerPixel 8 Fraction 8 Start 26476544 End 31195136	Specifier 0 Layout 3 Time 59 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=256, width=3, height=3, channel=256)
int8
	reshape_wgt_to_ddr() (256, 3, 3, 256) done ... 
0x30328000 0x303b8000 Name resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_weight Parameter True	Space 4718592 bits, BitePerPixel 8 Fraction 8 Start 26476544 End 31195136	Specifier 0 Layout 3 Time 59 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=256, width=3, height=3, channel=256)
589824
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x303b8000 0x303b8400 Name resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D_bias Parameter True	Space 8192 bits, BitePerPixel 32 Fraction 5 Start 31195136 End 31203328	Specifier 0 Layout 3 Time 60 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=256)
1024
	dump_ddr_data() done ...
Filing 1024
1024
	dump_ddr_data() done ...
Name resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_weight Parameter True	Space 2097152 bits, BitePerPixel 8 Fraction 7 Start 31211520 End 33308672	Specifier 0 Layout 3 Time 61 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1024, width=1, height=1, channel=256)
int8
	reshape_wgt_to_ddr() (1024, 1, 1, 256) done ... 
0x303b8800 0x303f8800 Name resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_weight Parameter True	Space 2097152 bits, BitePerPixel 8 Fraction 7 Start 31211520 End 33308672	Specifier 0 Layout 3 Time 61 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1024, width=1, height=1, channel=256)
262144
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x303f8800 0x303f9800 Name resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D_bias Parameter True	Space 32768 bits, BitePerPixel 32 Fraction 5 Start 33308672 End 33341440	Specifier 0 Layout 3 Time 62 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=1024)
4096
	dump_ddr_data() done ...
Name resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_weight Parameter True	Space 2097152 bits, BitePerPixel 8 Fraction 9 Start 33341440 End 35438592	Specifier 0 Layout 3 Time 63 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=256, width=1, height=1, channel=1024)
int8
	reshape_wgt_to_ddr() (256, 1, 1, 1024) done ... 
0x303f9800 0x30439800 Name resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_weight Parameter True	Space 2097152 bits, BitePerPixel 8 Fraction 9 Start 33341440 End 35438592	Specifier 0 Layout 3 Time 63 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=256, width=1, height=1, channel=1024)
262144
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x30439800 0x30439c00 Name resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D_bias Parameter True	Space 8192 bits, BitePerPixel 32 Fraction 5 Start 35438592 End 35446784	Specifier 0 Layout 3 Time 64 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=256)
1024
	dump_ddr_data() done ...
Filing 1024
1024
	dump_ddr_data() done ...
Name resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_weight Parameter True	Space 4718592 bits, BitePerPixel 8 Fraction 8 Start 35454976 End 40173568	Specifier 0 Layout 3 Time 65 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=256, width=3, height=3, channel=256)
int8
	reshape_wgt_to_ddr() (256, 3, 3, 256) done ... 
0x3043a000 0x304ca000 Name resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_weight Parameter True	Space 4718592 bits, BitePerPixel 8 Fraction 8 Start 35454976 End 40173568	Specifier 0 Layout 3 Time 65 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=256, width=3, height=3, channel=256)
589824
	dump_ddr_data() done ...
int32
	reshape_bias_to_ddr() done ...
0x304ca000 0x304ca400 Name resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D_bias Parameter True	Space 8192 bits, BitePerPixel 32 Fraction 5 Start 40173568 End 40181760	Specifier 0 Layout 3 Time 66 Strategies None None	Shape  [] CNN_Shape TensorShapes(batch=1, width=1, height=1, channel=256)
1024
	dump_ddr_data() done ...
Step  input
Step  input is an input
WARNING input data WARNING
Step  resnet_v1_50/conv1/Conv2D
resnet_v1_50/conv1/Conv2D {'id': 1, 'depth': 1, 'visited': False, 'color': 1, 'singleton': 0, 'span': 1, 'dfs': 2, 'tfs': 1, 'inc': 0, 'sn': 1.4, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
Memory access IN ddr PAR pa  TMP fm  OUT fm  resnet_v1_50/conv1/Conv2D parallelism 2 [1, 0, 0, 0, 1, 0]  
resnet_v1_50/conv1/Conv2D ['input']
resnet_v1_50/conv1/Conv2D_weight ['input']
resnet_v1_50/conv1/Conv2D_bias ['input']
input ['input']
change of layout resnet_v1_50/conv1/Conv2D [Name resnet_v1_50/conv1/Conv2D Type conv2d Composed [] Inputs ['input'] 
] None True
Step  resnet_v1_50/pool1/MaxPool
resnet_v1_50/pool1/MaxPool {'id': 2, 'depth': 2, 'visited': False, 'color': 1, 'singleton': 1, 'span': 1, 'dfs': 3, 'tfs': 2, 'inc': 0, 'sn': 2, 'compute': 0, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/conv1/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/pool1/MaxPool parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D
resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D {'id': 3, 'depth': 3, 'visited': False, 'color': 1, 'singleton': 5, 'span': 3, 'dfs': 7, 'tfs': 3, 'inc': 1, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/pool1/MaxPool
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D
resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D {'id': 4, 'depth': 3, 'visited': False, 'color': 1, 'singleton': 3, 'span': 1, 'dfs': 4, 'tfs': 3, 'inc': 1, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/pool1/MaxPool
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D
resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D {'id': 5, 'depth': 4, 'visited': False, 'color': 1, 'singleton': 4, 'span': 1, 'dfs': 5, 'tfs': 4, 'inc': 1, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D
resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D {'id': 6, 'depth': 5, 'visited': False, 'color': 1, 'singleton': 5, 'span': 1, 'dfs': 6, 'tfs': 5, 'inc': 1, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block1/unit_1/bottleneck_v1/add
resnet_v1_50/block1/unit_1/bottleneck_v1/add {'id': 7, 'depth': 6, 'visited': False, 'color': 1, 'singleton': 5, 'span': 2, 'dfs': 8, 'tfs': 6, 'inc': 2, 'sn': 2, 'compute': 0, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D
resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block1/unit_1/bottleneck_v1/add parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D
resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D {'id': 8, 'depth': 5, 'visited': False, 'color': 1, 'singleton': 7, 'span': 1, 'dfs': 9, 'tfs': 7, 'inc': 3, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block1/unit_1/bottleneck_v1/add
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D
resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D {'id': 9, 'depth': 6, 'visited': False, 'color': 1, 'singleton': 8, 'span': 1, 'dfs': 10, 'tfs': 8, 'inc': 3, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D
resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D {'id': 10, 'depth': 7, 'visited': False, 'color': 1, 'singleton': 9, 'span': 1, 'dfs': 11, 'tfs': 9, 'inc': 3, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block1/unit_2/bottleneck_v1/add
resnet_v1_50/block1/unit_2/bottleneck_v1/add {'id': 11, 'depth': 8, 'visited': False, 'color': 1, 'singleton': 9, 'span': 0, 'dfs': 12, 'tfs': 10, 'inc': 4, 'sn': 2, 'compute': 0, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D
resnet_v1_50/block1/unit_1/bottleneck_v1/add
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block1/unit_2/bottleneck_v1/add parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool
resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool {'id': 12, 'depth': 6, 'visited': False, 'color': 1, 'singleton': 14, 'span': 3, 'dfs': 16, 'tfs': 11, 'inc': 5, 'sn': 2, 'compute': 0, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block1/unit_2/bottleneck_v1/add
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D
resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D {'id': 13, 'depth': 6, 'visited': False, 'color': 1, 'singleton': 12, 'span': 1, 'dfs': 13, 'tfs': 11, 'inc': 5, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block1/unit_2/bottleneck_v1/add
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D
resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D {'id': 14, 'depth': 7, 'visited': False, 'color': 1, 'singleton': 13, 'span': 1, 'dfs': 14, 'tfs': 12, 'inc': 5, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D']
resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_weight ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D']
resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D_bias ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D']
resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D']
change of layout resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D [Name resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D Type conv2d Composed [] Inputs ['resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D'] 
] None True
Step  resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D
resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D {'id': 15, 'depth': 8, 'visited': False, 'color': 1, 'singleton': 14, 'span': 1, 'dfs': 15, 'tfs': 13, 'inc': 5, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block1/unit_3/bottleneck_v1/add
resnet_v1_50/block1/unit_3/bottleneck_v1/add {'id': 16, 'depth': 9, 'visited': False, 'color': 1, 'singleton': 14, 'span': 0, 'dfs': 17, 'tfs': 14, 'inc': 6, 'sn': 2, 'compute': 0, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool
resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block1/unit_3/bottleneck_v1/add parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D
resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D {'id': 17, 'depth': 8, 'visited': False, 'color': 1, 'singleton': 19, 'span': 3, 'dfs': 21, 'tfs': 15, 'inc': 7, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block1/unit_3/bottleneck_v1/add
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D
resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D {'id': 18, 'depth': 8, 'visited': False, 'color': 1, 'singleton': 17, 'span': 1, 'dfs': 18, 'tfs': 15, 'inc': 7, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block1/unit_3/bottleneck_v1/add
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D
resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D {'id': 19, 'depth': 9, 'visited': False, 'color': 1, 'singleton': 18, 'span': 1, 'dfs': 19, 'tfs': 16, 'inc': 7, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D
resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D {'id': 20, 'depth': 10, 'visited': False, 'color': 1, 'singleton': 19, 'span': 1, 'dfs': 20, 'tfs': 17, 'inc': 7, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block2/unit_1/bottleneck_v1/add
resnet_v1_50/block2/unit_1/bottleneck_v1/add {'id': 21, 'depth': 11, 'visited': False, 'color': 1, 'singleton': 19, 'span': 2, 'dfs': 22, 'tfs': 18, 'inc': 8, 'sn': 2, 'compute': 0, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D
resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block2/unit_1/bottleneck_v1/add parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D
resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D {'id': 22, 'depth': 10, 'visited': False, 'color': 1, 'singleton': 21, 'span': 1, 'dfs': 23, 'tfs': 19, 'inc': 9, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block2/unit_1/bottleneck_v1/add
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D
resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D {'id': 23, 'depth': 11, 'visited': False, 'color': 1, 'singleton': 22, 'span': 1, 'dfs': 24, 'tfs': 20, 'inc': 9, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D
resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D {'id': 24, 'depth': 12, 'visited': False, 'color': 1, 'singleton': 23, 'span': 1, 'dfs': 25, 'tfs': 21, 'inc': 9, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block2/unit_2/bottleneck_v1/add
resnet_v1_50/block2/unit_2/bottleneck_v1/add {'id': 25, 'depth': 13, 'visited': False, 'color': 1, 'singleton': 23, 'span': 1, 'dfs': 26, 'tfs': 22, 'inc': 10, 'sn': 2, 'compute': 0, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D
resnet_v1_50/block2/unit_1/bottleneck_v1/add
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block2/unit_2/bottleneck_v1/add parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D
resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D {'id': 26, 'depth': 11, 'visited': False, 'color': 1, 'singleton': 25, 'span': 1, 'dfs': 27, 'tfs': 23, 'inc': 11, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block2/unit_2/bottleneck_v1/add
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D
resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D {'id': 27, 'depth': 12, 'visited': False, 'color': 1, 'singleton': 26, 'span': 1, 'dfs': 28, 'tfs': 24, 'inc': 11, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D
resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D {'id': 28, 'depth': 13, 'visited': False, 'color': 1, 'singleton': 27, 'span': 1, 'dfs': 29, 'tfs': 25, 'inc': 11, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block2/unit_3/bottleneck_v1/add
resnet_v1_50/block2/unit_3/bottleneck_v1/add {'id': 29, 'depth': 14, 'visited': False, 'color': 1, 'singleton': 27, 'span': 0, 'dfs': 30, 'tfs': 26, 'inc': 12, 'sn': 2, 'compute': 0, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D
resnet_v1_50/block2/unit_2/bottleneck_v1/add
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block2/unit_3/bottleneck_v1/add parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool
resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool {'id': 30, 'depth': 12, 'visited': False, 'color': 1, 'singleton': 32, 'span': 3, 'dfs': 34, 'tfs': 27, 'inc': 13, 'sn': 2, 'compute': 0, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block2/unit_3/bottleneck_v1/add
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D
resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D {'id': 31, 'depth': 12, 'visited': False, 'color': 1, 'singleton': 30, 'span': 1, 'dfs': 31, 'tfs': 27, 'inc': 13, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block2/unit_3/bottleneck_v1/add
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D
resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D {'id': 32, 'depth': 13, 'visited': False, 'color': 1, 'singleton': 31, 'span': 1, 'dfs': 32, 'tfs': 28, 'inc': 13, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D']
resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_weight ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D']
resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D_bias ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D']
resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D']
change of layout resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D [Name resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D Type conv2d Composed [] Inputs ['resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D'] 
] None True
Step  resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D
resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D {'id': 33, 'depth': 14, 'visited': False, 'color': 1, 'singleton': 32, 'span': 1, 'dfs': 33, 'tfs': 29, 'inc': 13, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block2/unit_4/bottleneck_v1/add
resnet_v1_50/block2/unit_4/bottleneck_v1/add {'id': 34, 'depth': 15, 'visited': False, 'color': 1, 'singleton': 32, 'span': 0, 'dfs': 35, 'tfs': 30, 'inc': 14, 'sn': 2, 'compute': 0, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool
resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block2/unit_4/bottleneck_v1/add parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D
resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D {'id': 35, 'depth': 14, 'visited': False, 'color': 1, 'singleton': 37, 'span': 3, 'dfs': 39, 'tfs': 31, 'inc': 15, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block2/unit_4/bottleneck_v1/add
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D
resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D {'id': 36, 'depth': 14, 'visited': False, 'color': 1, 'singleton': 35, 'span': 1, 'dfs': 36, 'tfs': 31, 'inc': 15, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block2/unit_4/bottleneck_v1/add
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D
resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D {'id': 37, 'depth': 15, 'visited': False, 'color': 1, 'singleton': 36, 'span': 1, 'dfs': 37, 'tfs': 32, 'inc': 15, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D
resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D {'id': 38, 'depth': 16, 'visited': False, 'color': 1, 'singleton': 37, 'span': 1, 'dfs': 38, 'tfs': 33, 'inc': 15, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block3/unit_1/bottleneck_v1/add
resnet_v1_50/block3/unit_1/bottleneck_v1/add {'id': 39, 'depth': 17, 'visited': False, 'color': 1, 'singleton': 37, 'span': 2, 'dfs': 40, 'tfs': 34, 'inc': 16, 'sn': 2, 'compute': 0, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D
resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block3/unit_1/bottleneck_v1/add parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D
resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D {'id': 40, 'depth': 16, 'visited': False, 'color': 1, 'singleton': 39, 'span': 1, 'dfs': 41, 'tfs': 35, 'inc': 17, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block3/unit_1/bottleneck_v1/add
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D
resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D {'id': 41, 'depth': 17, 'visited': False, 'color': 1, 'singleton': 40, 'span': 1, 'dfs': 42, 'tfs': 36, 'inc': 17, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D
resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D {'id': 42, 'depth': 18, 'visited': False, 'color': 1, 'singleton': 41, 'span': 1, 'dfs': 43, 'tfs': 37, 'inc': 17, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block3/unit_2/bottleneck_v1/add
resnet_v1_50/block3/unit_2/bottleneck_v1/add {'id': 43, 'depth': 19, 'visited': False, 'color': 1, 'singleton': 41, 'span': 0, 'dfs': 44, 'tfs': 38, 'inc': 18, 'sn': 2, 'compute': 0, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D
resnet_v1_50/block3/unit_1/bottleneck_v1/add
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block3/unit_2/bottleneck_v1/add parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D
resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D {'id': 44, 'depth': 17, 'visited': False, 'color': 1, 'singleton': 43, 'span': 1, 'dfs': 45, 'tfs': 39, 'inc': 18, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block3/unit_2/bottleneck_v1/add
Memory access IN fm  PAR pa  TMP fm  OUT fm  resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D parallelism 1 [0, 0, 0, 0, 1, 0]  
Step  resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D
resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D {'id': 45, 'depth': 18, 'visited': False, 'color': 1, 'singleton': 44, 'span': 0, 'dfs': 46, 'tfs': 40, 'inc': 18, 'sn': 2, 'compute': 0, 'prefetch': False, 'parallel': False, 'parallel_tail': False, 'parallel_head': False}
resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D
Memory access IN fm  PAR pa  TMP fm  OUT ddr resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D parallelism 2 [0, 0, 0, 0, 1, 1]  
 ############################################# 
 ######  Naive instruction dependency
 ############################################# 
 ############################################# 
 ######  Code Generation at Node Level and then Recursively
 ############################################# 
Dependency ON 0 0 CUR 0 BY 0 
1 48 input ON 0 CUR 0 BY 1
2 48 resnet_v1_50/conv1/Conv2D ON 0 CUR 4 BY 8
3 48 resnet_v1_50/pool1/MaxPool ON 4 CUR 8 BY 1
4 48 resnet_v1_50/block1/unit_1/bottleneck_v1/shortcut/Conv2D ON 8 CUR 4 BY 1
5 48 resnet_v1_50/block1/unit_1/bottleneck_v1/conv1/Conv2D ON 4 CUR 4 BY 1
6 48 resnet_v1_50/block1/unit_1/bottleneck_v1/conv2/Conv2D ON 4 CUR 4 BY 1
7 48 resnet_v1_50/block1/unit_1/bottleneck_v1/conv3/Conv2D ON 4 CUR 4 BY 8
8 48 resnet_v1_50/block1/unit_1/bottleneck_v1/add ON 4 CUR 8 BY 1
9 48 resnet_v1_50/block1/unit_2/bottleneck_v1/conv1/Conv2D ON 8 CUR 4 BY 1
10 48 resnet_v1_50/block1/unit_2/bottleneck_v1/conv2/Conv2D ON 4 CUR 4 BY 1
11 48 resnet_v1_50/block1/unit_2/bottleneck_v1/conv3/Conv2D ON 4 CUR 4 BY 8
12 48 resnet_v1_50/block1/unit_2/bottleneck_v1/add ON 4 CUR 8 BY 8
13 48 resnet_v1_50/block1/unit_3/bottleneck_v1/shortcut/MaxPool ON 8 CUR 8 BY 1
14 48 resnet_v1_50/block1/unit_3/bottleneck_v1/conv1/Conv2D ON 8 CUR 4 BY 1
15 48 resnet_v1_50/block1/unit_3/bottleneck_v1/conv2/Conv2D ON 4 CUR 4 BY 1
16 48 resnet_v1_50/block1/unit_3/bottleneck_v1/conv3/Conv2D ON 4 CUR 4 BY 8
17 48 resnet_v1_50/block1/unit_3/bottleneck_v1/add ON 4 CUR 8 BY 1
18 48 resnet_v1_50/block2/unit_1/bottleneck_v1/shortcut/Conv2D ON 8 CUR 4 BY 1
19 48 resnet_v1_50/block2/unit_1/bottleneck_v1/conv1/Conv2D ON 4 CUR 4 BY 1
20 48 resnet_v1_50/block2/unit_1/bottleneck_v1/conv2/Conv2D ON 4 CUR 4 BY 1
21 48 resnet_v1_50/block2/unit_1/bottleneck_v1/conv3/Conv2D ON 4 CUR 4 BY 8
22 48 resnet_v1_50/block2/unit_1/bottleneck_v1/add ON 4 CUR 8 BY 1
23 48 resnet_v1_50/block2/unit_2/bottleneck_v1/conv1/Conv2D ON 8 CUR 4 BY 1
24 48 resnet_v1_50/block2/unit_2/bottleneck_v1/conv2/Conv2D ON 4 CUR 4 BY 1
25 48 resnet_v1_50/block2/unit_2/bottleneck_v1/conv3/Conv2D ON 4 CUR 4 BY 8
26 48 resnet_v1_50/block2/unit_2/bottleneck_v1/add ON 4 CUR 8 BY 1
27 48 resnet_v1_50/block2/unit_3/bottleneck_v1/conv1/Conv2D ON 8 CUR 4 BY 1
28 48 resnet_v1_50/block2/unit_3/bottleneck_v1/conv2/Conv2D ON 4 CUR 4 BY 1
29 48 resnet_v1_50/block2/unit_3/bottleneck_v1/conv3/Conv2D ON 4 CUR 4 BY 8
30 48 resnet_v1_50/block2/unit_3/bottleneck_v1/add ON 4 CUR 8 BY 8
31 48 resnet_v1_50/block2/unit_4/bottleneck_v1/shortcut/MaxPool ON 8 CUR 8 BY 1
32 48 resnet_v1_50/block2/unit_4/bottleneck_v1/conv1/Conv2D ON 8 CUR 4 BY 1
33 48 resnet_v1_50/block2/unit_4/bottleneck_v1/conv2/Conv2D ON 4 CUR 4 BY 1
34 48 resnet_v1_50/block2/unit_4/bottleneck_v1/conv3/Conv2D ON 4 CUR 4 BY 8
35 48 resnet_v1_50/block2/unit_4/bottleneck_v1/add ON 4 CUR 8 BY 1
36 48 resnet_v1_50/block3/unit_1/bottleneck_v1/shortcut/Conv2D ON 8 CUR 4 BY 1
37 48 resnet_v1_50/block3/unit_1/bottleneck_v1/conv1/Conv2D ON 4 CUR 4 BY 1
38 48 resnet_v1_50/block3/unit_1/bottleneck_v1/conv2/Conv2D ON 4 CUR 4 BY 1
39 48 resnet_v1_50/block3/unit_1/bottleneck_v1/conv3/Conv2D ON 4 CUR 4 BY 8
40 48 resnet_v1_50/block3/unit_1/bottleneck_v1/add ON 4 CUR 8 BY 1
41 48 resnet_v1_50/block3/unit_2/bottleneck_v1/conv1/Conv2D ON 8 CUR 4 BY 1
42 48 resnet_v1_50/block3/unit_2/bottleneck_v1/conv2/Conv2D ON 4 CUR 4 BY 1
43 48 resnet_v1_50/block3/unit_2/bottleneck_v1/conv3/Conv2D ON 4 CUR 4 BY 8
44 48 resnet_v1_50/block3/unit_2/bottleneck_v1/add ON 4 CUR 8 BY 1
45 48 resnet_v1_50/block3/unit_3/bottleneck_v1/conv1/Conv2D ON 8 CUR 4 BY 1
46 48 resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D ON 4 CUR 4 BY 2
47 48 bracket ON 2 CUR 2 BY 0
 ############################################# 
 ######  Code Generation at Node Level and then Recursively
 ############################################# 
21 8 [950272.0, 917504] [688128, 458752]
BATCH IN  Shape [4, 224, 224, 3] Heights [21, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 14] 
BATCH OUT Shape [4, 112, 112, 64] Heights [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8] 
input 0 40189952
10 8 [825753.6, 458752] [458752, 229376]
BATCH IN  Shape [4, 14, 14, 256] Heights [10, 5] 
BATCH OUT Shape [4, 14, 14, 256] Heights [8, 6] 
 ############################################# 
 ######  Success boost
 ############################################# 
 ############################################# 
 ######  Writing code to file:SC/work/manasa/tf/all-frompic/45/out.asm
 ############################################# 
{'inputs': {'input': {'name': 'input', 'shape': TensorShapes(batch=4, width=224, height=224, channel=3), 'address': 40189952}}, 'outputs': {'resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D': {'name': 'resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D', 'shape': TensorShapes(batch=4, width=14, height=14, channel=256), 'address': 65880064}}, 'cmd': ('SC/HwAbstraction/code_generation.py -o SC/work/manasa/tf/all-frompic/45/out.asm -n examples/tf_resnetv1_50_imagenet_224_224_6.97G/quantized/quantize_eval_model.pb -f tensorflow --json SC/meta.json --params SC/work/manasa/tf/all-frompic/45/params.txt --biaspatch true --circus True --forwardcut resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D',)}
Namespace(address=None, avgpool_as_convolution=True, backwardcut=None, biaspatch='true', caffemodel=None, circus='True', fc=False, final=False, firstlayerreshape=False, forwardcut='resnet_v1_50/block3/unit_3/bottleneck_v1/conv2/Conv2D', framework='tensorflow', inner_as_convolution=True, inshapes='[4,224,224,3]', json='SC/meta.json', network='examples/tf_resnetv1_50_imagenet_224_224_6.97G/quantized/quantize_eval_model.pb', nocpu=True, operation_fusion=False, operation_fusion_elt=False, operation_fusion_pool_conv=False, output='SC/work/manasa/tf/all-frompic/45/out.asm', parallelismgraphalgorithm=None, parallelismstrategy="['bottom','top']", params='SC/work/manasa/tf/all-frompic/45/params.txt', prefetch=False, quant=None, skip=False, softwarepipeline=False)
{'model': 'res50', 'kernel': 'dpdpuv3_wrapper', 'xclbin': 'tests/app/models/dpuv3int8_resnet50', 'instrFile': 'controller/src/dpuv3int8/instr.txt', 'dInFile': 'controller/src/dpuv3int8/din.txt', 'dOutFile': 'controller/src/dpuv3int8/dout.txt', 'resultFile': 'controller/src/dpuv3int8/result.txt', 'paramsFile': 'controller/src/dpuv3int8/params.txt', 'inDDRSize': 150528, 'inKernelW': 7, 'inStrdW': 2, 'inCh': 3, 'inH': 224, 'inW': 224, 'outW': 112, 'padLft': 3, 'padRt': 3, 'swapBufSize': 16777216, 'druSrcBufSize': 16777216, 'druDstBufSize': 16777216, 'channelAugmentationMode': False, 'druMode': True}
SC/ meta json
